import{m as F,ao as ae,A as R,at as Ie,j as Be,M as ke,N as $e,aw as Me,H as Pe,aK as Te,av as Ee}from"./index-a29fd331.js";import{u as Oe}from"./useTreeCheckState-76b05bb2.js";import{d as X,c as b,r as M,w as we,n as He,f as qe,x as xe,i as Ue,S as _e,M as je,l as W,y as J,q as K,p as ze,a7 as ye,D as Re,P as We}from"./vendor-4501f550.js";/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function Y(e,n,t){if(t){const l=[],a=e.value;n.forEach(o=>{const r=a.get(o);r&&l.push(r.rawNode)}),F(t,n,l)}}function Se(e,n){const t=[],{children:l}=e||{};return l&&l.forEach(a=>{const{key:o}=a;n!=null&&n.includes(o)||t.push(a.key),t.push(...Se(a,n))}),t}function Le(e,n,t){const l=[];for(;n&&!X(n.parentKey);){const{parentKey:a}=n;t!=null&&t.includes(n.parentKey)||l.push(a),n=e.get(a)}return l}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function Ve(e,n,t,l,a){const[o,r]=ae(e,"checkedKeys",()=>[]),d=b(()=>({data:n.value,dataMap:t.value,parentKeyMap:l.value,depthMap:a.value})),h=M("children"),s=M(c=>c.key),g=b(()=>e.cascaderStrategy),u=M(c=>!!c.checkDisabled),{checkStateResolver:p,isChecked:C,isIndeterminate:m,toggle:S}=Oe(o,d,h,s,g,u),I=c=>{const{checked:v,checkedKeys:k}=S(c);c.checkDisabled||A(v,c.rawNode,k)},A=(c,v,k)=>{const{onCheck:w,onCheckedChange:i}=e;F(w,c,v),r(k),Y(t,k,i)};return we(g,()=>{const c=p.appendKeys([],o.value);r(c),Y(t,c,e.onCheckedChange)}),{checkedKeys:o,isChecked:C,isIndeterminate:m,handleCheck:I}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function Ge(e,n,t,l){const a=M({}),o=(p,C)=>{a.value[p]=C},r=p=>a.value[p],d=b(()=>{const p=new Map,C=new Map,m=new Map;return{mergedNodes:Ae(e.dataSource,r,{props:e,childrenKey:n.value,getKey:t.value,labelKey:l.value,parentKey:void 0,parentLevel:-1,parentsDisabled:[]},{dataKeyMap:p,parentKeyMap:C,depthMap:m}),dataKeyMap:p,parentKeyMap:C,depthMap:m}}),h=b(()=>d.value.mergedNodes),s=b(()=>d.value.dataKeyMap),g=b(()=>d.value.parentKeyMap),u=b(()=>d.value.depthMap);return{mergedNodes:h,mergedNodeMap:s,parentKeyMap:g,depthMap:u,setLoadedNodes:o}}function Xe(e,{expandedKeys:n},t,l){return b(()=>{const{searchValue:a}=t,o=new Map(n.value.map((d,h)=>[d,h])),r=new Map(l.value.map((d,h)=>[d,h]));return a&&!r.size?[]:o.size||r.size?Qe(e.value,o,r):e.value.map(d=>({...d,expanded:!1,level:0}))})}function Ae(e,n,t,l){const{props:a,childrenKey:o,getKey:r,labelKey:d,parentKey:h,parentLevel:s,parentsDisabled:g}=t,{cascaderStrategy:u,disabled:p,loadChildren:C}=a,{dataKeyMap:m,parentKeyMap:S,depthMap:I}=l,A=!!C;return e.map((c,v)=>{var q,$,j;const k=r(c),w=Ye(c,p),i=(q=c[o])!=null?q:n(k),f=c[d],D=s+1,L=i&&Ae(i,n,{props:a,childrenKey:o,getKey:r,labelKey:d,parentKey:k,parentLevel:D,parentsDisabled:[w,...g!=null?g:[]]},l),B=Je(w,g!=null?g:[],($=L==null?void 0:L.map(H=>({check:H.checkDisabled,drag:H.dragDisabled,drop:H.dropDisabled,select:H.selectDisabled})))!=null?$:[],u!=="off"),T={label:f,key:k,children:L,isFirst:v===0,isLeaf:(j=c.isLeaf)!=null?j:!(i!=null&&i.length||A),isLast:v===e.length-1,parentKey:h,expanded:!1,level:D,rawNode:c,checkDisabled:B.check,dragDisabled:B.drag,dropDisabled:B.drop,selectDisabled:B.select};return m.set(k,T),S.set(k,h),I.set(k,D),T})}function Ye(e,n){const t=e.disabled||{};if(t===!0)return{check:!0,drag:!0,drop:!0,select:!0};let{check:l,drag:a,drop:o,select:r}=t;if(n){const d=n(e)||{};if(d===!0)return{check:!0,drag:!0,drop:!0,select:!0};l=l||d.check,a=a||d.drag,o=o||d.drop,r=r||d.select}return{check:l,drag:a,drop:o,select:r}}function Je(e,n,t,l){const a=o=>e[o]||l&&(n.some(r=>!!r[o])||!!t.length&&t.every(r=>!!r[o]));return{check:a("check"),drag:a("drag"),drop:a("drop"),select:a("select")}}function Ne(e=[],n){const t=[],l=e.length;return e.forEach((a,o)=>{a.isFirst=o===0,a.isLast=o===l-1,n.has(a.key)||n.size==0?(a.hidden=!1,t.push(a)):a.hidden=!0,Ne(a.children,n).length>0&&(a.hidden=!1,t.push(a))}),t.length&&(t[0].isFirst=!0,t[t.length-1].isLast=!0),t}function Qe(e,n,t){const l=[],a=[];return Ne(e,t),e.forEach(o=>{for(a.push(o);a.length;){const r=a.pop();if(r){const{children:d,key:h,hidden:s}=r,g=n.has(h);if(r.expanded=g,!s&&l.push(r),d&&g)for(let u=d.length;u>0;u--)!d[u-1].hidden&&a.push(d[u-1])}}}),l}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function Ze(e,n,{expandedKeys:t,setExpandedKeys:l}){const a=b(()=>{var i;return(i=e.draggableIcon)!=null?i:n.draggableIcon}),o=M(),r=M(),d=M(),h=M(),s=M();let g;const u=()=>{g&&(clearTimeout(g),g=void 0)};He(()=>u());const p=()=>{X(o.value)||(o.value=void 0,r.value=void 0)},C=()=>{X(d.value)||(d.value=void 0,h.value=void 0,s.value=void 0)},m=(i,f)=>{var D,L;return{evt:i,node:f.rawNode,dragNode:(D=o.value)==null?void 0:D.rawNode,dropNode:(L=d.value)==null?void 0:L.rawNode,dropType:s.value}},S=i=>{A(i,void 0),window.removeEventListener("dragend",S)},I=(i,f)=>{o.value=f,r.value=Se(f),nn(f.key,t.value,l),window.addEventListener("dragend",S),F(e.onDragstart,m(i,f))},A=(i,f)=>{f&&F(e.onDragend,m(i,f)),p(),C()},c=async(i,f)=>{const D=o.value;if(D){u(),D.key!==f.key&&(g=setTimeout(()=>{var B;o.value&&((B=f.children)!=null&&B.length)&&en(f.key,t.value,l),g=void 0},1e3));const L=await Ce(f,D,r.value,i,e.droppable);L?(d.value=f,h.value=L!=="inside"?f.parentKey:void 0,s.value=L):C()}F(e.onDragenter,m(i,f))},v=async(i,f)=>{const D=o.value;if(D){const L=await Ce(f,D,r.value,i,e.droppable);L?(d.value=f,h.value=L!=="inside"?f.parentKey:void 0,s.value=L):C()}F(e.onDragover,m(i,f))},k=(i,f)=>{const D=d.value;(D==null?void 0:D.key)===f.key&&!i.currentTarget.contains(i.relatedTarget)&&C(),F(e.onDragleave,m(i,f))},w=(i,f)=>{s.value||C(),F(e.onDrop,m(i,f)),p(),C()};return{draggableIcon:a,dragKey:b(()=>{var i;return(i=o.value)==null?void 0:i.key}),dropKey:b(()=>{var i;return(i=d.value)==null?void 0:i.key}),dropParentKey:h,dropType:s,handleDragstart:I,handleDragend:A,handleDragenter:c,handleDragover:v,handleDragleave:k,handleDrop:w}}function en(e,n,t){n.indexOf(e)===-1&&t([...n,e])}function nn(e,n,t){const l=n.indexOf(e);if(l!==-1){const a=[...n];a.splice(l,1),t(a)}}async function Ce(e,n,t,l,a){const{key:o,children:r=[]}=e;if(n.key===o||t&&t.includes(o))return!1;const{clientY:d}=l,{top:h,height:s}=l.target.getBoundingClientRect(),g=d<h+s/2;let u;if(a){const p={evt:l,isTopHalf:g,dragNode:n.rawNode,dropNode:e.rawNode};u=await a(p)}return(u===void 0||u===!0)&&(r.length>0?u="inside":g?u="before":u="after"),u}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function tn(e,n,t,{expandedKeys:l,handleExpand:a},{activeKey:o,handleSelect:r}){const d=M(!1);return{focused:d,handleFocus:p=>{d.value=!0,F(e.onFocus,p)},handleBlur:p=>{d.value=!0,F(e.onBlur,p)},handleKeydown:p=>{switch(p.code){case"ArrowUp":case"ArrowDown":p.preventDefault()}F(e.onKeydown,p)},handleKeyup:p=>{const C=p.code,m=o.value,S=t.value,I=S.length;if(m===void 0)["ArrowDown","ArrowUp","ArrowLeft","ArrowRight"].includes(C)&&fe(o,S,0,I);else{const A=t.value,c=A.findIndex(v=>v.key===m);if(c===-1)return;switch(C){case"Enter":case"NumpadEnter":r(m);break;case"ArrowDown":fe(o,A,c+1,I);break;case"ArrowUp":fe(o,A,c-1,0,!0);break;case"ArrowLeft":{const{rawNode:v,key:k,parentKey:w}=A[c];if(v.isLeaf||!l.value.includes(k)){const i=w?n.value.get(w):void 0;i&&(o.value=i.key)}else a(k,v)}break;case"ArrowRight":{const{rawNode:v,key:k}=A[c];if(!l.value.includes(k))a(k,v);else for(let w=c+1;w<I;w++){const i=A[w];o.value=i.key;break}}break}}F(e.onKeyup,p)}}}function fe(e,n,t,l,a=!1){let o=t;for(;a?o>=l:o<l;){const r=n[o];if(r.selectDisabled)a?o--:o++;else{e.value=r.key;return}}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function an(e,n,t,l,a,o){const r=b(()=>{var c;return(c=e.expandIcon)!=null?c:n.expandIcon}),[d,h]=ae(e,"expandedKeys",()=>[]),[s,g]=ae(e,"loadedKeys",()=>[]),u=M([]),p=({key:c,expanded:v,node:k})=>{if(qe(r.value))return xe(R,{name:r.value,rotate:v?90:0});if(Ue(r.value))return r.value({key:c,expanded:v,node:k});if(_e(r.value))return xe(R,{name:v?r.value[0]:r.value[1]})},C=c=>{if(!c||c.length<=0)return;const{onExpandedChange:v}=e,k=l.value,w=new Set(d.value);c.forEach(f=>{Le(k,k.get(f)).forEach(D=>w.add(D))});const i=[...w];h(i),Y(l,i,v)};we(a,C);const m=async(c,v)=>{var L;const{loadChildren:k}=e;if(u.value.includes(c))return;const w=t.value;if(!((L=v==null?void 0:v[w])!=null&&L.length)){if(!k||u.value.includes(c)||s.value.includes(c))return;u.value.push(c);const B=await k(v);u.value.splice(u.value.indexOf(c),1);const q=l.value.get(c);if(B!=null&&B.length){o(c,B),q.rawNode[w]=B;const $=[...s.value,c];g($),F(e.onLoaded,$,v)}else return}const i=d.value.indexOf(c),f=i>=0,D=[...d.value];f?D.splice(i,1):D.push(c),S(f,v,D)},S=(c,v,k)=>{const{onExpand:w,onExpandedChange:i}=e;F(w,!c,v),h(k),Y(l,k,i)},I=()=>{const c=[],v=[];l.value.forEach(k=>{k.isLeaf||(c.push(k.key),v.push(k.rawNode))}),F(e.onExpandedChange,c,v),h(c)},A=()=>{F(e.onExpandedChange,[],[]),h([])};return a.value.length&&C(a.value),{expandIconRenderer:p,expandedKeys:d,setExpandedKeys:h,expandAll:I,collapseAll:A,handleExpand:m,loadingKeys:u}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function on(e,n,t){const l=ln(e,t);return{searchedKeys:b(()=>{const{searchValue:o}=e;if(!o)return Ie;const r=l.value,d=[];return n.value.forEach(h=>{r(h.rawNode,o)&&d.push(h.key)}),d})}}function ln(e,n){return b(()=>{var t;return(t=e.searchFn)!=null?t:rn(n.value)})}function rn(e){return(n,t)=>{const l=n[e];return l?l.toLowerCase().includes(t.toLowerCase()):!1}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function cn(e,n){const[t,l]=ae(e,"selectedKeys",()=>[]),a=b(()=>e.selectable==="multiple"),o=M();je(()=>{const s=t.value,g=s.length;o.value=g>0?s[g-1]:void 0});const r=b(()=>{const s=o.value;return s!==void 0?n.value.get(s):void 0}),d=s=>{const u=n.value.get(s);if(!u)return;const p=t.value.indexOf(s),C=p>-1;let m=[...t.value];a.value?C?m.splice(p,1):m.push(s):m=C?[]:[s],h(C,u.rawNode,m)},h=(s,g,u)=>{var S;const{onSelect:p,onSelectedChange:C}=e,m=u.includes((S=g.key)!=null?S:"")?!0:!s;F(p,m,g),l(u),Y(n,u,C)};return{activeKey:o,activeNode:r,selectedKeys:t,handleSelect:d}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const V=Symbol("treeToken");/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const dn={autoHeight:{type:Boolean,default:void 0},checkedKeys:Array,expandedKeys:Array,indeterminateKeys:Array,loadedKeys:Array,selectedKeys:Array,blocked:{type:Boolean,default:void 0},cascaderStrategy:{type:String,default:"off"},checkable:{type:Boolean,default:!1},childrenKey:String,checkOnClick:{type:Boolean,default:!1},customAdditional:{type:Function,default:void 0},dataSource:{type:Array,default:()=>[]},disabled:Function,draggable:{type:Boolean,default:!1},draggableIcon:{type:String,default:void 0},droppable:Function,empty:{type:[String,Object],default:"simple"},expandIcon:{type:[String,Function,Array],default:void 0},getKey:{type:[String,Function],default:void 0},height:Number,labelKey:String,leafLineIcon:String,loadChildren:Function,searchFn:Function,searchValue:String,selectable:{type:[Boolean,String],default:!0},showLine:{type:Boolean,default:void 0},virtual:{type:Boolean,default:!1},virtualScrollMode:{type:String,default:void 0},virtualItemHeight:{type:Number,default:28},"onUpdate:checkedKeys":[Function,Array],"onUpdate:expandedKeys":[Function,Array],"onUpdate:loadedKeys":[Function,Array],"onUpdate:selectedKeys":[Function,Array],onCheck:[Function,Array],onCheckedChange:[Function,Array],onDragstart:[Function,Array],onDragend:[Function,Array],onDragenter:[Function,Array],onDragleave:[Function,Array],onDragover:[Function,Array],onDrop:[Function,Array],onExpand:[Function,Array],onExpandedChange:[Function,Array],onLoaded:[Function,Array],onSelect:[Function,Array],onSelectedChange:[Function,Array],onFocus:[Function,Array],onBlur:[Function,Array],onKeydown:[Function,Array],onKeyup:[Function,Array],onNodeClick:[Function,Array],onNodeContextmenu:[Function,Array],onScroll:[Function,Array],onScrolledChange:[Function,Array],onScrolledBottom:[Function,Array]},sn={node:{type:Object,required:!0},isLeaf:{type:Boolean,required:!0},isFirst:{type:Boolean,required:!0},isLast:{type:Boolean,required:!0},label:String,level:{type:Number,required:!0},rawNode:{type:Object,required:!0},expanded:{type:Boolean,required:!0},children:Array,parentKey:[String,Number,Symbol],checkDisabled:{type:Boolean,default:void 0},dragDisabled:{type:Boolean,default:void 0},dropDisabled:{type:Boolean,default:void 0},selectDisabled:{type:Boolean,default:void 0}},un={node:{type:Object,required:!0},checkDisabled:{type:Boolean,default:void 0}},hn={expanded:{type:Boolean,required:!0},hasTopLine:{type:Boolean,default:void 0},hasBottomLine:{type:Boolean,default:void 0},isLeaf:{type:Boolean,default:void 0},nodeKey:{type:[String,Number,Symbol],required:!0},rawNode:{type:Object,required:!0}},gn={disabled:{type:Boolean,default:void 0},node:{type:Object,required:!0},nodeKey:{type:[String,Number,Symbol],required:!0},label:String,selected:{type:Boolean,default:void 0}},vn=W({props:un,setup(e){const{mergedPrefixCls:n,isChecked:t,isIndeterminate:l,handleCheck:a}=J(V),o=b(()=>t(e.node.key)),r=b(()=>l(e.node.key)),d=()=>a(e.node);return()=>K(Be,{class:`${n.value}-node-checkbox`,checked:o.value,disabled:e.checkDisabled,indeterminate:r.value,onChange:d},null)}}),fn=W({props:gn,setup(e,{slots:n}){const{props:t,mergedPrefixCls:l,mergedCheckOnClick:a,handleSelect:o,handleCheck:r,searchedKeys:d}=J(V),h=b(()=>d.value.includes(e.nodeKey)),s=u=>{e.disabled||(o(e.nodeKey),a.value&&r(e.node)),F(t.onNodeClick,u,e.node.rawNode)},g=u=>{F(t.onNodeContextmenu,u,e.node.rawNode)};return()=>{var i,f;const{nodeKey:u,label:p,node:C,selected:m}=e,{rawNode:S}=C,{prefix:I,suffix:A}=S,c={key:u,selected:m,node:S},v=((i=n.prefix)==null?void 0:i.call(n,c))||I&&K(R,{name:I},null),k=((f=n.suffix)==null?void 0:f.call(n,c))||A&&K(R,{name:A},null),w=`${l.value}-node-content`;return K("span",{class:w,onClick:s,onContextmenu:g},[v&&K("span",{class:`${w}-prefix`},[v]),K("span",{class:`${w}-label`},[yn(n.label,p,S,t.searchValue,h.value,w)]),k&&K("span",{class:`${w}-suffix`},[k])])}}});function yn(e,n,t,l,a,o){if(e)return e({node:t,searchValue:l,searched:a});if(a&&n&&l){const r=n.toUpperCase().indexOf(l.toUpperCase());if(r>-1){const d=r+l.length,h=n.substring(0,r),s=n.substring(d),g=K("span",{class:`${o}-label-highlight`},[n.substring(r,d)]);return[h,g,s]}}return n}const pn=W({props:hn,setup(e,{slots:n}){const{mergedPrefixCls:t,expandIconRenderer:l,loadingKeys:a,handleExpand:o}=J(V),r=b(()=>a.value.includes(e.nodeKey)),d=b(()=>{const s=`${t.value}-node-expand`;return ze({[s]:!0,[`${s}-noop`]:e.isLeaf})}),h=s=>{o(e.nodeKey,e.rawNode),s.stopPropagation()};return()=>{var u,p;const s=`${t.value}-node-expand`;let g;if(r.value)g=K(R,{name:"loading"},null);else if(!e.isLeaf){const{expanded:C,nodeKey:m,rawNode:S}=e;g=(p=(u=n.expandIcon)!=null?u:l)==null?void 0:p({key:m,expanded:C,node:S})}return K("span",{class:d.value,onClick:h},[e.hasTopLine&&K("div",{class:`${s}-top-line`},null),g,e.hasBottomLine&&K("div",{class:`${s}-bottom-line`},null)])}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const bn=({level:e,noopIdentUnitArr:n,prefixCls:t})=>{const l=[];for(let a=0;a<e;a++)l.push(K("span",{key:a,class:n.includes(a)?`${t}-node-indent-noop-unit`:`${t}-node-indent-unit`},null));return K("span",{"aria-hidden":!0,class:`${t}-node-indent`},[l])},kn=bn,xn=W({setup(e,{slots:n}){const{props:t,mergedPrefixCls:l}=J(V);return()=>{const a=`${l.value}-node-leaf`;let o;return n.leafLineIcon?o=n.leafLineIcon():t.leafLineIcon?o=K(R,{name:t.leafLineIcon},null):o=K("span",{class:`${a}-line`},null),K("span",{class:a},[o])}}}),me=W({props:sn,setup(e,{slots:n}){const{props:t,flattedNodes:l,mergedPrefixCls:a,mergedShowLine:o,activeKey:r,selectedKeys:d,draggableIcon:h,dragKey:s,dropKey:g,dropParentKey:u,dropType:p,handleDragstart:C,handleDragend:m,handleDragenter:S,handleDragover:I,handleDragleave:A,handleDrop:c}=J(V),v=b(()=>e.node.key),k=b(()=>r.value===v.value),w=b(()=>o.value&&e.isLast),i=b(()=>o.value&&!e.isLeaf&&(!e.isFirst||e.level!==0)),f=b(()=>o.value&&!e.isLeaf&&!e.isLast),D=b(()=>d.value.includes(v.value)),L=b(()=>e.selectDisabled||!t.selectable),B=b(()=>s.value===v.value),T=b(()=>g.value===v.value),q=b(()=>u.value===v.value),$=b(()=>T.value&&p.value==="before"),j=b(()=>T.value&&p.value==="inside"),H=b(()=>T.value&&p.value==="after"),Q=b(()=>{const x=`${a.value}-node`;return{[x]:!0,[`${x}-active`]:k.value,[`${x}-last`]:w.value,[`${x}-disabled`]:L.value,[`${x}-selected`]:D.value,[`${x}-expanded`]:e.expanded,[`${x}-dragging`]:B.value,[`${x}-dropping`]:T.value,[`${x}-drop-parent`]:q.value,[`${x}-drop-before`]:$.value,[`${x}-drop-inside`]:j.value,[`${x}-drop-after`]:H.value}}),oe=x=>{var z;x.stopPropagation(),C(x,e.node),(z=x.dataTransfer)==null||z.setData("text/plain","")},le=x=>{x.stopPropagation(),m(x,e.node)},re=x=>{x.preventDefault(),x.stopPropagation(),S(x,e.node)},ce=x=>{x.preventDefault(),x.stopPropagation(),I(x,e.node)},de=x=>{x.stopPropagation(),A(x,e.node)},se=x=>{x.stopPropagation(),c(x,e.node)};return()=>{var _,pe;const x=new Map;l.value.forEach(te=>{x.set(te.key,te)});const{isLeaf:z,label:G,level:Z,rawNode:ee,expanded:ie,checkDisabled:ue,dragDisabled:y,dropDisabled:N,node:E}=e,{checkable:O,draggable:U}=t,P=U&&!y,he=(pe=(_=n.draggableIcon)==null?void 0:_.call(n))!=null?pe:K(R,{name:h.value},null),ge=x.get(v.value),ne=[];o.value&&Le(x,ge).reverse().forEach((te,Fe)=>{var be;(be=x.get(te))!=null&&be.isLast&&ne.push(Fe)});const ve=t.customAdditional?t.customAdditional({node:ee,level:Z}):void 0;return K("div",ye({class:Q.value,"aria-grabbed":B.value||void 0,"aria-label":G,"aria-selected":D.value,draggable:P||void 0,title:G,onDragstart:P?oe:void 0,onDragend:P?le:void 0,onDragenter:P?re:void 0,onDragover:P?ce:void 0,onDragleave:P?de:void 0,onDrop:P&&!N?se:void 0},ve),[K(kn,{level:Z,noopIdentUnitArr:ne,prefixCls:a.value},null),P?K("span",{class:`${a.value}-node-draggable-icon`},[he]):U&&K("span",{class:`${a.value}-node-draggable-icon-noop`},null),z&&o.value?K(xn,null,n):K(pn,{expanded:ie,hasTopLine:i.value,hasBottomLine:f.value,isLeaf:z,nodeKey:v.value,rawNode:ee},n),O&&K(vn,{checkDisabled:ue,node:E},null),K(fn,{disabled:L.value,node:E,nodeKey:v.value,label:G,selected:D.value},n)])}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function Ke(e){const{heightMd:n,heightSm:t,marginSizeXs:l,colorPrimaryHover:a,colorPrimaryText:o,colorContainerBgHover:r,colorContainerBg:d,colorIconInfo:h}=e;return{dropLineWidth:2,dropLineColor:a,bgColor:d,nodeBgColorHover:r,nodeBgColorSelected:d,nodeColorSelected:o,nodePaddingHorizontal:l,nodePaddingVertical:"0px",nodeContentHeight:n,nodeContentLabelHighlightColor:o,nodeContentPrefixMarginRight:l,nodeCheckboxMarginRight:l,nodeIconWidth:t,expandIconColor:h}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const Cn=(e,n)=>Ke(e),De={width:0,height:0,display:"flex",overflow:"hidden",opacity:0,border:0,padding:0,margin:0},mn=W({name:"IxTree",props:dn,setup(e,{attrs:n,expose:t,slots:l}){const a=ke("common"),{globalHashId:o,hashId:r,registerToken:d}=$e("tree");d(Cn);const h=b(()=>`${a.prefixCls}-tree`),s=ke("tree"),g=b(()=>{var y;return(y=e.autoHeight)!=null?y:s.autoHeight}),u=b(()=>{var y;return(y=e.childrenKey)!=null?y:s.childrenKey}),p=Me(e,s),C=b(()=>{var y;return(y=e.labelKey)!=null?y:s.labelKey}),m=b(()=>{var y;return(y=e.showLine)!=null?y:s.showLine}),S=b(()=>{var y;return(y=e.blocked)!=null?y:s.blocked}),I=b(()=>e.checkable&&e.checkOnClick),{mergedNodes:A,mergedNodeMap:c,parentKeyMap:v,depthMap:k,setLoadedNodes:w}=Ge(e,u,p,C),{searchedKeys:i}=on(e,c,C),f=an(e,s,u,c,i,w),D=Xe(A,f,e,i),L=Ve(e,A,c,v,k),B=Ze(e,s,f),T=cn(e,c),{handleCheck:q}=L;Re(V,{props:e,config:s,flattedNodes:D,mergedPrefixCls:h,mergedNodeMap:c,mergedGetKey:p,mergedShowLine:m,mergedCheckOnClick:I,searchedKeys:i,...L,...f,...B,...T});const $=M(),j=M(),{activeKey:H}=T,{focused:Q,handleFocus:oe,handleBlur:le,handleKeydown:re,handleKeyup:ce}=tn(e,c,D,f,T),de=b(()=>{const y=h.value;return{[o.value]:!!o.value,[r.value]:!!r.value,[y]:!0,[`${y}-active`]:!X(H.value),[`${y}-blocked`]:S.value,[`${y}-virtual`]:e.virtual,[`${y}-auto-height`]:g.value,[`${y}-focused`]:Q.value,[`${y}-show-line`]:m.value,[`${y}-empty`]:!D.value.length}}),se=b(()=>{var U,P;const y=H.value;if(X(y))return"";const N=c.value;let E=String(y),O=(U=N.get(y))==null?void 0:U.parentKey;for(;O;)E=`${String(O)} > ${E}`,O=(P=N.get(O))==null?void 0:P.parentKey;return E}),x=y=>{var N;(N=$==null?void 0:$.value)==null||N.focus(y)},z=()=>{var y;(y=$==null?void 0:$.value)==null||y.blur()},G=y=>{var N;(N=j.value)==null||N.scrollTo(y)},Z=y=>{var N;return(N=c.value.get(y))==null?void 0:N.rawNode},ee=()=>D.value,ie=y=>{const N=c.value.get(y);N&&q(N)};t({focus:x,blur:z,expandAll:f.expandAll,collapseAll:f.collapseAll,scrollTo:G,getNode:Z,_getFlattedNodes:ee,_handleCheck:ie});const ue=(y,N,E)=>{F(e.onScrolledChange,y,N,E.map(O=>O.rawNode))};return()=>{var E;const y=D.value;let N;if(y.length>0){const O=({item:_})=>K(me,ye({node:_},_),l),{height:U,virtual:P,virtualItemHeight:he,virtualScrollMode:ge,onScroll:ne,onScrolledBottom:ve}=e;N=P?K(Pe,{ref:j,class:`${h.value}-content`,dataSource:y,getKey:"key",height:g.value?"100%":U,rowHeight:he,rowRender:O,virtual:!0,scrollMode:ge,onScroll:ne,onScrolledBottom:ve,onScrolledChange:ue},null):K("div",{class:`${h.value}-content`,style:We(g.value?void 0:{maxHeight:Te(U)})},[K("div",{class:`${h.value}-content-inner`},[y.map(_=>K(me,ye({node:_},_),l))])])}else N=K(Ee,{empty:e.empty},l);return K("div",{class:de.value,role:"tree"},[Q.value&&K("span",{style:De,"aria-live":"assertive"},[se.value]),K("input",{ref:$,style:De,tabindex:(E=n.tabIndex)!=null?E:0,onFocus:oe,onBlur:le,onKeydown:re,onKeyup:ce,value:"","aria-label":"for screen reader"},null),N])}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const Sn=mn;export{Sn as I};
