import{a7 as V,aO as x,aX as E,aY as R,c as u,q as F,aZ as z,x as k,R as n,a_ as w,a$ as O}from"./index-ab797f89.js";/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const P={control:{type:[String,Number,Object,Array],default:void 0},value:{type:String,default:void 0},clearable:{type:Boolean,default:void 0},clearIcon:{type:String,default:void 0},disabled:{type:Boolean,default:!1},readonly:{type:Boolean,default:!1},size:{type:String,default:void 0},status:String,trim:{type:Boolean,default:void 0},"onUpdate:value":[Function,Array],onChange:[Function,Array],onClear:[Function,Array],onCompositionStart:[Function,Array],onCompositionEnd:[Function,Array],onInput:[Function,Array],onFocus:[Function,Array],onBlur:[Function,Array]},N={...P,addonAfter:{type:String,default:void 0},addonBefore:{type:String,default:void 0},borderless:{type:Boolean,default:void 0},prefix:{type:String,default:void 0},suffix:{type:String,default:void 0}};/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function U(a,r){const{accessor:t,control:c}=V();x(c);const S=E(a,r),g=R(a,c),A=u(()=>{var e;return(e=a.clearable)!=null?e:r.clearable}),h=u(()=>{var e;return(e=a.clearIcon)!=null?e:r.clearIcon}),b=u(()=>!t.disabled&&!a.readonly&&!!t.value),p=u(()=>{var e;return(e=a.trim)!=null?e:r.trim}),s=F(!1),d=e=>{s.value=!0,n(a.onFocus,e)},f=e=>{s.value=!1,t.markAsBlurred(),n(a.onBlur,e),p.value&&v(e.target.value.trim())},{elementRef:m,focus:B,blur:I}=z({handleFocus:d,handleBlur:f}),v=e=>{const o=w(t.value);e!==o&&(t.setValue(e),n(a.onChange,e,o),O(()=>i()))},i=()=>{var C;const e=m.value,o=(C=t.value)!=null?C:"";e&&e.value!==o&&(e.value=o)};k(()=>t.value,()=>i());const l=F(!1),y=(e,o=!0)=>{o&&n(a.onInput,e),!l.value&&v(e.target.value)};return{elementRef:m,accessor:t,mergedSize:S,mergedStatus:g,clearable:A,clearIcon:h,clearVisible:b,isFocused:s,isComposing:l,focus:B,blur:I,handleInput:y,handleCompositionStart:e=>{l.value=!0,n(a.onCompositionStart,e)},handleCompositionEnd:e=>{n(a.onCompositionEnd,e),l.value&&(l.value=!1,y(e,!1))},handleFocus:d,handleBlur:f,handleClear:e=>{t.setValue(""),n(a.onClear,e)},syncValue:i}}export{P as a,N as i,U as u};
