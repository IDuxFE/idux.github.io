import{Q as h,u as F,R as w,az as z,F as W,H as K,T as q,aA as L,b as k,d as A,w as B,v as Q}from"./index-8386a717.js";import{v as x,e as u,y as c,p as C,z as N,s as j,w as D,a as O,j as G,l as R,Q as H,i as J,L as V,a2 as _,J as U,au as X}from"./vendor-4521613a.js";/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const y=[Number,String,Object],Y={control:{type:[String,Number,Object],default:void 0},colonless:{type:Boolean,default:void 0},controlCol:y,controlTooltipIcon:String,labelAlign:String,labelCol:y,labelTooltipIcon:String,layout:String,messageTooltip:{type:[Boolean,Object],default:!1},size:String,onSubmit:{type:Function,default:t=>t.preventDefault()}},Z={colonless:{type:Boolean,default:void 0},control:{type:[String,Number,Object],default:void 0},controlCol:y,controlTooltip:String,controlTooltipIcon:String,description:String,label:[String,Number],labelAlign:String,labelCol:y,labelFor:[String,Number],labelTooltip:String,labelTooltipIcon:String,required:{type:Boolean,default:!1},message:[String,Function,Object],messageTooltip:{type:[Boolean,Object],default:void 0},status:String},P={control:{type:[String,Number,Object],default:void 0}},tt=x({name:"IxForm",props:Y,setup(t,{slots:l}){const n=h();C(w,n);const s=F("common"),e=u(()=>`${s.prefixCls}-form`),o=F("form"),i=u(()=>t.layout??o.layout),a=u(()=>t.size??o.size);C(z,{props:t,config:o}),C(W,{size:a});const r=u(()=>{const d=e.value;return N({[d]:!0,[`${d}-${i.value}`]:!0,[`${d}-${a.value}`]:!0})});return()=>c("form",{class:r.value,onSubmit:t.onSubmit},[l.default&&l.default()])}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function ot(t){const l=et(),n=K(t,l),s=lt(t,l,n);return{status:n,message:s}}function et(){const t=j();let l,n;C(L,{registerControl:(a,r)=>{n||(l=a,n=H(()=>t.value=r.value))},unregisterControl:a=>{a===l&&(n&&(n(),n=void 0),t.value=void 0)}});const o=h(),i=j();return D([o,t],([a,r])=>{const d=a??r;i.value!==d&&(i.value=d)},{immediate:!0}),i}function lt(t,l,n){const s=F("locale");return u(()=>{const e=n.value;if(!e)return;const o=t.message;return o?O(o)?o(l.value):G(o)?o[e]:e==="invalid"?o:void 0:nt(l,s)})}function nt(t,l){const n=t.value;if(!n)return;const s=n.errors.value;for(const e in s){if(!q(s,e))continue;const{message:o,...i}=s[e];if(o){if(R(o))return o;if(O(o))return o(i,n);const a=o[l.type];if(a)return O(a)?a(i,n):a}}}const st=x({name:"IxFormItem",props:Z,setup(t,{slots:l}){const n=F("common"),s=u(()=>`${n.prefixCls}-form-item`),{props:e,config:o}=J(z,null)||{},i=u(()=>t.colonless??(e==null?void 0:e.colonless)??(o==null?void 0:o.colonless)),a=u(()=>t.labelAlign??(e==null?void 0:e.labelAlign)??(o==null?void 0:o.labelAlign)),r=u(()=>M(t.labelCol??(e==null?void 0:e.labelCol))),d=u(()=>t.labelTooltipIcon??(e==null?void 0:e.labelTooltipIcon)??(o==null?void 0:o.labelTooltipIcon)),v=u(()=>M(t.controlCol??(e==null?void 0:e.controlCol))),b=u(()=>t.controlTooltipIcon??(e==null?void 0:e.controlTooltipIcon)??(o==null?void 0:o.controlTooltipIcon)),S=u(()=>t.messageTooltip??(e==null?void 0:e.messageTooltip)),{status:p,message:T}=ot(t),I=u(()=>{const f=s.value,m=p.value;return N({[f]:!0,[`${f}-${m}`]:!!m})}),$=u(()=>{const f=s.value;return N({[`${f}-label`]:!0,[`${f}-label-colon`]:!i.value,[`${f}-label-required`]:t.required,[`${f}-label-start`]:a.value==="start"})});return()=>{const f=s.value;return c(k,{class:I.value},{default:()=>[at(t,l,$,r,d,f),rt(t,l,n,v,b,p,T,S,f)]})}}});function M(t){return V(t)||R(t)?{span:t}:t}function at(t,l,n,s,e,o){const{label:i,labelFor:a,labelTooltip:r}=t,{label:d,labelTooltip:v}=l;if(!(i||d))return;const b=E(v,r,e.value);return c(A,_({class:n.value},s.value),{default:()=>[c("label",{for:a},[d?d():i,b&&c("span",{class:`${o}-label-tooltip`},[b])])]})}function rt(t,l,n,s,e,o,i,a,r){const{controlTooltip:d,description:v}=t,{controlTooltip:b,description:S,message:p}=l,T=E(b,d,e.value),I=c("div",{class:`${r}-control-input`},[c("div",{class:`${r}-control-input-content`},[l.default&&l.default()]),T&&c("span",{class:`${r}-control-tooltip`},[T])]),$=it(a.value,i.value,r),f=S?S():v,m=[];if($){const g={default:()=>I,title:p};m.push(c(B,$,g))}else{m.push(I);const g=p?p():i.value;(!f||g)&&m.push(c("div",{class:`${r}-message`},[c(U,{name:`${n.prefixCls}-fade-down`},{default:()=>[g&&c("div",{class:`${r}-message-${o.value}`},[g])]})]))}return f&&m.push(c("div",{class:`${r}-description`},[f])),c(A,_({class:`${r}-control`},s.value),{default:()=>[m]})}function it(t,l,n){if(!t)return;const s={class:`${n}-message-tooltip`,offset:[0,6],placement:"bottomStart",title:l};return X(t)?s:{...s,...t}}function E(t,l,n){return t?t():l&&c(B,{title:l},{default:()=>[c(Q,{name:n},null)]})}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const ct=x({name:"IxFormWrapper",props:P,setup(t,{slots:l}){const n=h();return C(w,n),()=>{var s;return(s=l.default)==null?void 0:s.call(l)}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const ft=tt,mt=st,bt=ct;export{mt as I,ft as a,bt as b};
