import{aa as Ae,i as C,ac as te,aN as Ie,c as Fe,E as ke,u as Q,ar as Ne,a8 as Ke,p as De,q as Be,G as Le,H as Ee,as as Me,at as Re,au as Ve}from"./index-b887bcb8.js";import{e as S,au as le,t as Oe,v as oe,i as Te,b as Y,y as A,a as Pe,w as ze,p as we,a2 as ne,z as Ge}from"./vendor-4521613a.js";import{I as $e}from"./index-620d3b6b.js";/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function Ue(e,a,t,d){return{mergedNodeMap:S(()=>{const s=new Map,r=re(e,e.dataSource,a.value,t.value,d.value);return Z(r,s),s})}}function re(e,a,t,d,i,s){const{treeDisabled:r,loadChildren:c}=e;return a.map(b=>ce(b,t,d,i,r,!!c,s))}function ce(e,a,t,d,i,s,r){const c=t(e),{check:b,drag:u,drop:f,select:v}=He(e,i),I=e[a],F=e[d],p=I==null?void 0:I.map(N=>ce(N,a,t,d,i,s,c));return{children:p,label:F,key:c,isLeaf:e.isLeaf??!(p!=null&&p.length||s),parentKey:r,rawData:e,checkDisabled:b,dragDisabled:u,dropDisabled:f,selectDisabled:v}}function He(e,a){const t=e.disabled;if(le(t))return{check:t,drag:t,drop:t,select:t};{let{drag:d,drop:i,select:s}=t??{},r;if(a){const c=a(e);le(c)?(r??(r=c),d??(d=c),i??(i=c),s??(s=c)):(d??(d=c.drag),i??(i=c.drop),s??(s=c.select),r??(r=c.select))}return{check:r,drag:d,drop:i,select:s}}}function Z(e,a){e.forEach(t=>{const{key:d,children:i}=t;a.set(d,t),i&&Z(i,a)})}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function je(e,a,t){const d=S(()=>Ae(a.value)),i=S(()=>{const u=t.value;return d.value.map(f=>u.get(f)).filter(Boolean)}),s=u=>{const f=e.multiple?u:u[0],v=Oe(a.value);f!==v&&(a.setValue(f),C(e.onChange,f,v))};return{selectedValue:d,selectedNodes:i,changeSelected:u=>{!e.multiple&&!u.length||s(u)},handleRemove:u=>{s(d.value.filter(f=>u!==f))},handleClear:u=>{u.stopPropagation(),s([]),C(e.onClear,u)}}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const de=Symbol("treeSelectToken"),qe=oe({setup(){const{config:e,props:a,slots:t,locale:d,mergedPrefixCls:i,mergedChildrenKey:s,mergedGetKey:r,mergedLabelKey:c,mergedNodeMap:b,inputValue:u,setInputValue:f,treeRef:v,expandedKeys:I,setExpandedKeys:F,selectedValue:p,changeSelected:N,handleNodeClick:E}=Te(de),[O,T]=te(a,"loadedKeys",()=>[]),m=Y(!1),K=S(()=>a.multiple&&a.checkable),P=S(()=>K.value?a.cascaderStrategy:"off"),z=(o,n,y)=>{const{onScrolledChange:g}=a;C(g,o,n,y.map(x=>x.rawData))},M=o=>{o.stopPropagation()},R=(o,n)=>{const{onCheck:y}=a;C(y,o,n),E()},w=(o,n)=>{var g;const{onSelect:y}=a;!a.multiple&&((g=p.value)==null?void 0:g[0])!==n.key&&C(y,o,n),E()},G=(o,n)=>{const{onExpand:y}=a;C(y,o,n)},$=(o,n)=>{const{onExpandedChange:y}=a;C(y,o,n),F(o)},U=o=>{var y,g;const n=m.value;n?(y=v.value)==null||y.expandAll():(g=v.value)==null||g.collapseAll(),m.value=!n,o.stopPropagation()},H=async(o,n)=>{const y=n.children??[],g=n.key,x=b.value,k=x.get(g);if(y.length&&k){const B=s.value,L=re(a,y,B,r.value,c.value,g);Z(L,x),k.rawData[B]=y,k.children=L,T(o),C(a.onLoaded,o,n)}},j=S(()=>a.clearIcon??e.clearIcon),q=o=>{const{value:n}=o.target;f(n),a.searchable&&C(a.onSearch,n)},D=()=>f("");return()=>{const{customAdditional:o,dataSource:n,draggable:y,draggableIcon:g,empty:x,expandIcon:k,multiple:B,leafLineIcon:L,virtual:_,searchable:W,showLine:l,onDragstart:h,onDragend:V,onDragenter:se,onDragleave:ue,onDragover:ie,onDrop:ye,onNodeClick:fe,onNodeContextmenu:ve,onScroll:ge,onScrolledBottom:pe,droppable:he,treeDisabled:me,loadChildren:Se,searchFn:X,overlayRender:ee,overlayHeight:be}=a,Ce=i.value,xe={label:t.treeLabel,prefix:t.treePrefix,suffix:t.treeSuffix,leafLineIcon:t.leafLineIcon,empty:t.empty,expandIcon:t.expandIcon,draggableIcon:t.draggableIcon},J=[A($e,{ref:v,blocked:!0,checkOnClick:!0,checkedKeys:p.value,customAdditional:o,expandedKeys:I.value,loadedKeys:O.value,labelKey:c.value,checkable:K.value,cascaderStrategy:P.value,childrenKey:s.value,dataSource:n,draggable:y,draggableIcon:g,droppable:he,disabled:me,empty:x,expandIcon:k,getKey:r.value,height:be,loadChildren:Se,leafLineIcon:L,virtual:_,selectable:B?"multiple":!0,selectedKeys:p.value,searchValue:X!==!1?u.value:void 0,searchFn:Pe(X)?X:void 0,showLine:l,onClick:M,onCheck:R,onDragstart:h,onDragend:V,onDragenter:se,onDragleave:ue,onDragover:ie,onDrop:ye,onNodeClick:fe,onNodeContextmenu:ve,onExpand:G,onSelect:w,onLoaded:H,onCheckedChange:N,onSelectedChange:K.value?Ie:N,onExpandedChange:$,onScroll:ge,onScrolledBottom:pe,onScrolledChange:z},xe)];if(W==="overlay"){const ae=u.value;J.unshift(A("div",{class:`${Ce}-overlay-search-wrapper`},[A(Fe,{size:"xs",shape:"square",title:m.value?d.treeSelect.expandAll:d.treeSelect.collapseAll,icon:m.value?"tree-expand":"tree-unexpand",onClick:U},null),A(ke,{clearable:!0,clearIcon:j.value,clearVisible:!!ae,size:"sm",suffix:"search",value:ae,onClear:D,onInput:q},null)]))}return A("div",null,[ee?ee(J):J])}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const _e={control:{type:[String,Number,Object],default:void 0},value:{type:null,default:void 0},open:{type:Boolean,default:void 0},expandedKeys:{type:Array,default:void 0},loadedKeys:{type:Array,default:void 0},autocomplete:{type:String,default:"off"},autofocus:{type:Boolean,default:!1},borderless:{type:Boolean,default:void 0},childrenKey:{type:String,default:void 0},cascaderStrategy:{type:String,default:"off"},checkable:{type:Boolean,default:!1},clearable:{type:Boolean,default:!1},clearIcon:{type:String,default:void 0},customAdditional:{type:Function,default:void 0},dataSource:{type:Array,default:()=>[]},disabled:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},draggableIcon:{type:String,default:void 0},droppable:{type:Function,default:void 0},empty:{type:[String,Object],default:"simple"},expandIcon:{type:[String,Array],default:void 0},getKey:{type:[String,Function],default:void 0},labelKey:{type:String,default:void 0},leafLineIcon:{type:String,default:void 0},loadChildren:{type:Function,default:void 0},maxLabel:{type:[Number,String],default:Number.MAX_SAFE_INTEGER},multiple:{type:Boolean,default:!1},offset:Array,overlayClassName:{type:String,default:void 0},overlayContainer:{type:[String,HTMLElement,Function],default:void 0},overlayMatchWidth:{type:Boolean,default:void 0},overlayRender:{type:Function,default:void 0},placeholder:{type:String,default:void 0},readonly:{type:Boolean,default:!1},searchable:{type:[Boolean,String],default:!1},searchFn:{type:[Boolean,Function],default:!0},size:{type:String,default:void 0},showLine:{type:Boolean,default:void 0},status:String,suffix:{type:String,default:void 0},treeDisabled:{type:Function,default:void 0},virtual:{type:Boolean,default:!1},"onUpdate:value":[Function,Array],"onUpdate:open":[Function,Array],"onUpdate:expandedKeys":[Function,Array],"onUpdate:loadedKeys":[Function,Array],onCheck:[Function,Array],onChange:[Function,Array],onClear:[Function,Array],onDragstart:[Function,Array],onDragend:[Function,Array],onDragenter:[Function,Array],onDragleave:[Function,Array],onDragover:[Function,Array],onDrop:[Function,Array],onExpand:[Function,Array],onExpandedChange:[Function,Array],onLoaded:[Function,Array],onNodeClick:[Function,Array],onNodeContextmenu:[Function,Array],onSearch:[Function,Array],onSelect:[Function,Array],onScroll:[Function,Array],onScrolledChange:[Function,Array],onScrolledBottom:[Function,Array],overlayHeight:{type:Number,default:256}},We=oe({name:"IxTreeSelect",inheritAttrs:!1,props:_e,setup(e,{attrs:a,expose:t,slots:d}){const i=Q("common"),s=Q("locale"),r=Q("treeSelect"),c=S(()=>`${i.prefixCls}-tree-select`),b=S(()=>e.childrenKey??r.childrenKey),u=Ne(e,r),f=S(()=>e.labelKey??r.labelKey),v=Y(),[I,F]=Ke(""),p=()=>{var l;return(l=v.value)==null?void 0:l.focus()},N=()=>{var l;return(l=v.value)==null?void 0:l.blur()},E=()=>{var l;e.searchable==="overlay"?F(""):(l=v.value)==null||l.clearInput()},[O,T]=te(e,"expandedKeys",()=>[]),{accessor:m,control:K}=De();Be(K);const P=Le(e,r),z=Ee(e,K),{mergedNodeMap:M}=Ue(e,b,u,f),{selectedValue:R,selectedNodes:w,changeSelected:G,handleRemove:$,handleClear:U}=je(e,m,M),{overlayRef:H,overlayStyle:j,updateOverlay:q,overlayOpened:D,setOverlayOpened:o}=Me(e,r,v),n=Y();t({focus:p,blur:N,collapseAll:()=>{var l;return(l=n.value)==null?void 0:l.collapseAll()},expandAll:()=>{var l;return(l=n.value)==null?void 0:l.expandAll()},scrollTo:l=>{var h;(h=n.value)==null||h.scrollTo(l)},getNode:l=>{var h;return n.value?n.value.getNode(l):(h=M.value.get(l))==null?void 0:h.rawData}}),ze(D,l=>{l&&p(),E()});const g=()=>{e.searchable!=="overlay"&&p()},x=()=>{e.multiple?E():o(!1)},k=()=>m.markAsBlurred(),B=l=>{p(),$(l)};we(de,{props:e,slots:d,config:r,locale:s,mergedPrefixCls:c,mergedChildrenKey:b,mergedGetKey:u,mergedLabelKey:f,expandedKeys:O,mergedNodeMap:M,inputValue:I,setInputValue:F,treeRef:n,accessor:m,setExpandedKeys:T,overlayOpened:D,setOverlayOpened:o,handleNodeClick:x,selectedValue:R,changeSelected:G});const L=S(()=>{const{overlayClassName:l,multiple:h}=e,V=c.value;return Ge({[`${V}-overlay`]:!0,[`${V}-overlay-multiple`]:h,[l||""]:!!l})}),_=()=>A(Ve,ne({ref:v,className:c.value,allowInput:!1,autocomplete:e.autocomplete,autofocus:e.autofocus,borderless:e.borderless,clearable:e.clearable,clearIcon:e.clearIcon,config:r,dataSource:w.value,disabled:m.disabled,maxLabel:e.maxLabel,multiple:e.multiple,opened:D.value,placeholder:e.placeholder,readonly:e.readonly,searchable:e.searchable,size:P.value,status:z.value,suffix:e.suffix,value:R.value,onBlur:k,onClear:U,onInputValueChange:F,onItemRemove:B,onOpenedChange:o,onResize:q,onSearch:e.onSearch},a),d),W=()=>A(qe,{onClick:g},null);return()=>{const l={class:L.value,style:j.value,clickOutside:!0,container:e.overlayContainer??r.overlayContainer,containerFallback:`.${c.value}-overlay-container`,disabled:m.disabled||e.readonly,offset:e.offset??r.offset,placement:"bottomStart",transitionName:`${i.prefixCls}-slide-up`,trigger:"manual",triggerId:a.id,visible:D.value,"onUpdate:visible":o},h={default:_,content:W};return A(Re,ne({ref:H},l),h)}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const Ye=We;export{Ye as I};
