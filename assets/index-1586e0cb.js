import{an as Ie,m as C,ao as ne,aU as ke,c as Ne,a9 as Ke,M as ae,N as Be,aw as De,ak as Le,r as Me,a6 as Te,aa as Ee,ab as Pe,ay as Ve,az as ze,aF as Re}from"./index-55847558.js";import{c as x,au as te,t as $e,l as se,y as we,r as le,q as A,i as He,w as Oe,D as Ue,p as Ge,a8 as We}from"./vendor-d701f15d.js";import{I as je}from"./index-b21c60b4.js";/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function _e(e,n,t,o){return{mergedNodeMap:x(()=>{const c=new Map,d=ue(e,e.dataSource,n.value,t.value,o.value);return oe(d,c),c})}}function ue(e,n,t,o,r,c){const{treeDisabled:d,loadChildren:i}=e;return n.map(F=>ie(F,t,o,r,d,!!i,c))}function ie(e,n,t,o,r,c,d){var h;const i=t(e),{check:F,drag:v,drop:u,select:g}=qe(e,r),b=e[n],K=e[o],p=b==null?void 0:b.map(B=>ie(B,n,t,o,r,c,i));return{children:p,label:K,key:i,isLeaf:(h=e.isLeaf)!=null?h:!(p!=null&&p.length||c),parentKey:d,rawData:e,checkDisabled:F,dragDisabled:v,dropDisabled:u,selectDisabled:g}}function qe(e,n){const t=e.disabled;if(te(t))return{check:t,drag:t,drop:t,select:t};{let{drag:o,drop:r,select:c}=t!=null?t:{},d;if(n){const i=n(e);te(i)?(d!=null||(d=i),o!=null||(o=i),r!=null||(r=i),c!=null||(c=i)):(o!=null||(o=i.drag),r!=null||(r=i.drop),c!=null||(c=i.select),d!=null||(d=i.select))}return{check:d,drag:o,drop:r,select:c}}}function oe(e,n){e.forEach(t=>{const{key:o,children:r}=t;n.set(o,t),r&&oe(r,n)})}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function Xe(e,n,t,o){const r=x(()=>Ie(n.value)),c=x(()=>{const u=o.value;return r.value.map(g=>u.get(g)).filter(Boolean)}),d=u=>{const g=e.multiple?u:u[0],b=$e(n.value);g!==b&&(n.setValue(g),C(e.onChange,g,b))};return{selectedValue:r,selectedNodes:c,changeSelected:u=>{!e.multiple&&!u.length||d(u)},handleRemove:u=>{var g;(g=t.value)==null||g._handleCheck(u)},handleClear:u=>{d([]),C(e.onClear,u)}}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const ye=Symbol("treeSelectToken"),Je=se({setup(){const{config:e,props:n,slots:t,locale:o,mergedPrefixCls:r,mergedChildrenKey:c,mergedGetKey:d,mergedLabelKey:i,mergedNodeMap:F,inputValue:v,setInputValue:u,treeRef:g,expandedKeys:b,setExpandedKeys:K,selectedValue:p,changeSelected:h,handleNodeClick:B}=we(ye),[R,D]=ne(n,"loadedKeys",()=>[]),L=le(!1),M=x(()=>n.multiple&&n.checkable),O=x(()=>M.value?n.cascaderStrategy:"off"),U=(l,s,y)=>{const{onScrolledChange:m}=n;C(m,l,s,y.map(I=>I.rawData))},T=l=>{l.stopPropagation()},w=(l,s)=>{const{onCheck:y}=n;C(y,l,s),B()},G=(l,s)=>{var m;const{onSelect:y}=n;!n.multiple&&((m=p.value)==null?void 0:m[0])!==s.key&&C(y,l,s),B()},W=(l,s)=>{const{onExpand:y}=n;C(y,l,s)},$=(l,s)=>{const{onExpandedChange:y}=n;C(y,l,s),K(l)},H=l=>{var y,m;const s=L.value;s?(y=g.value)==null||y.expandAll():(m=g.value)==null||m.collapseAll(),L.value=!s,l.stopPropagation()},j=async(l,s)=>{const y=c.value,m=i.value,I=d.value,k=s[y],E=I(s),P=F.value,N=P.get(E);if(k.length&&N){const V=ue(n,k,y,I,m,E);oe(V,P),N.rawData[y]=k,N.children=V,D(l),C(n.onLoaded,l,s)}},_=x(()=>{var l;return(l=n.clearIcon)!=null?l:e.clearIcon}),q=l=>{const{value:s}=l.target;u(s),n.searchable&&C(n.onSearch,s)},X=()=>{u(""),n.searchable&&C(n.onSearch,"")};return()=>{const{customAdditional:l,dataSource:s,draggable:y,draggableIcon:m,empty:I,expandIcon:k,multiple:E,leafLineIcon:P,virtual:N,virtualItemHeight:V,searchable:J,showLine:Q,searchPlaceholder:a,onDragstart:f,onDragend:S,onDragenter:z,onDragleave:Y,onDragover:fe,onDrop:ge,onNodeClick:ve,onNodeContextmenu:pe,onScroll:he,onScrolledBottom:me,droppable:Se,treeDisabled:Ce,loadChildren:be,searchFn:Z,overlayRender:re,overlayHeight:xe}=n,Ae=r.value,Fe={label:t.treeLabel,prefix:t.treePrefix,suffix:t.treeSuffix,leafLineIcon:t.leafLineIcon,empty:t.empty,expandIcon:t.expandIcon,draggableIcon:t.draggableIcon},ee=[A(je,{ref:g,blocked:!0,checkOnClick:!0,checkedKeys:p.value,customAdditional:l,expandedKeys:b.value,loadedKeys:R.value,labelKey:i.value,checkable:M.value,cascaderStrategy:O.value,childrenKey:c.value,dataSource:s,draggable:y,draggableIcon:m,droppable:Se,disabled:Ce,empty:I,expandIcon:k,getKey:d.value,height:xe,loadChildren:be,leafLineIcon:P,virtual:N,virtualItemHeight:V,selectable:E?"multiple":!0,selectedKeys:p.value,searchValue:Z!==!1?v.value:void 0,searchFn:He(Z)?Z:void 0,showLine:Q,onClick:T,onCheck:w,onDragstart:f,onDragend:S,onDragenter:z,onDragleave:Y,onDragover:fe,onDrop:ge,onNodeClick:ve,onNodeContextmenu:pe,onExpand:W,onSelect:G,onLoaded:j,onCheckedChange:h,onSelectedChange:M.value?ke:h,onExpandedChange:$,onScroll:he,onScrolledBottom:me,onScrolledChange:U},Fe)];if(J==="overlay"){const ce=v.value;ee.unshift(A("div",{class:`${Ae}-overlay-search-wrapper`},[A(Ne,{size:"xs",shape:"square",title:L.value?o.treeSelect.expandAll:o.treeSelect.collapseAll,icon:L.value?"expand-all":"collapse-all",onClick:H},null),A(Ke,{clearable:!0,clearIcon:_.value,clearVisible:!!ce,size:"sm",suffix:"search",value:ce,placeholder:a,onClear:X,onInput:q},null)]))}return A("div",{tabindex:-1},[re?re(ee):ee])}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const Qe={control:{type:[String,Number,Object,Array],default:void 0},value:{type:null,default:void 0},open:{type:Boolean,default:void 0},expandedKeys:{type:Array,default:void 0},loadedKeys:{type:Array,default:void 0},autocomplete:{type:String,default:"off"},autofocus:{type:Boolean,default:!1},borderless:{type:Boolean,default:void 0},childrenKey:{type:String,default:void 0},cascaderStrategy:{type:String,default:"off"},checkable:{type:Boolean,default:!1},clearable:{type:Boolean,default:!1},clearIcon:{type:String,default:void 0},customAdditional:{type:Function,default:void 0},dataSource:{type:Array,default:()=>[]},disabled:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},draggableIcon:{type:String,default:void 0},droppable:{type:Function,default:void 0},empty:{type:[String,Object],default:"simple"},expandIcon:{type:[String,Function,Array],default:void 0},getKey:{type:[String,Function],default:void 0},labelKey:{type:String,default:void 0},leafLineIcon:{type:String,default:void 0},loadChildren:{type:Function,default:void 0},maxLabel:{type:[Number,String],default:Number.MAX_SAFE_INTEGER},multiple:{type:Boolean,default:!1},offset:Array,overlayClassName:{type:String,default:void 0},overlayContainer:{type:[String,HTMLElement,Function],default:void 0},overlayMatchWidth:{type:[Boolean,String],default:void 0},overlayRender:{type:Function,default:void 0},placeholder:{type:String,default:void 0},readonly:{type:Boolean,default:!1},searchable:{type:[Boolean,String],default:!1},searchFn:{type:[Boolean,Function],default:!0},searchPlaceholder:{type:String,default:void 0},size:{type:String,default:void 0},spin:{type:[Boolean,Object],default:void 0},showLine:{type:Boolean,default:void 0},status:String,suffix:{type:String,default:void 0},treeDisabled:{type:Function,default:void 0},virtual:{type:Boolean,default:!1},virtualItemHeight:{type:Number,default:void 0},"onUpdate:value":[Function,Array],"onUpdate:open":[Function,Array],"onUpdate:expandedKeys":[Function,Array],"onUpdate:loadedKeys":[Function,Array],onCheck:[Function,Array],onChange:[Function,Array],onClear:[Function,Array],onDragstart:[Function,Array],onDragend:[Function,Array],onDragenter:[Function,Array],onDragleave:[Function,Array],onDragover:[Function,Array],onDrop:[Function,Array],onFocus:[Function,Array],onBlur:[Function,Array],onExpand:[Function,Array],onExpandedChange:[Function,Array],onLoaded:[Function,Array],onNodeClick:[Function,Array],onNodeContextmenu:[Function,Array],onSearch:[Function,Array],onSelect:[Function,Array],onScroll:[Function,Array],onScrolledChange:[Function,Array],onScrolledBottom:[Function,Array],overlayHeight:{type:Number,default:256}};/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function de(e){const{fontSizeSm:n,heightMd:t,marginSizeSm:o,paddingSizeXs:r,paddingSizeSm:c,paddingSizeMd:d}=e;return{optionFontSize:n,optionHeight:t,optionPadding:`${c}px ${d}px`,optionMarginLeft:o,optionContainerPadding:`${r}px 0`,optionContainerTreeNodePadding:`0 0 0 ${d}px`,overlaySearchWrapperPadding:`${r}px ${d}px ${c}px`}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const Ye=(e,n)=>de(e),Ze=se({name:"IxTreeSelect",inheritAttrs:!1,props:Qe,setup(e,{attrs:n,expose:t,slots:o}){const r=ae("common"),{globalHashId:c,hashId:d,registerToken:i}=Be("treeSelect");i(Ye);const F=ae("locale"),v=ae("treeSelect"),u=x(()=>`${r.prefixCls}-tree-select`),g=x(()=>{var a;return(a=e.childrenKey)!=null?a:v.childrenKey}),b=De(e,v),K=x(()=>{var a;return(a=e.labelKey)!=null?a:v.labelKey}),p=le(),h=le(),[B,R]=Le(""),D=()=>{var a;return(a=p.value)==null?void 0:a.focus()},L=()=>{var a;return(a=p.value)==null?void 0:a.blur()},M=()=>{var a;e.searchable==="overlay"?R(""):(a=p.value)==null||a.clearInput()},[O,U]=ne(e,"expandedKeys",()=>[]),{accessor:T,control:w}=Me();Te(w);const G=Ee(e,v),W=Pe(e,w),{mergedNodeMap:$}=_e(e,g,b,K),{selectedValue:H,selectedNodes:j,changeSelected:_,handleRemove:q,handleClear:X}=Xe(e,T,h,$),[l,s]=ne(e,"open",!1);t({focus:D,blur:L,collapseAll:()=>{var a;return(a=h.value)==null?void 0:a.collapseAll()},expandAll:()=>{var a;return(a=h.value)==null?void 0:a.expandAll()},scrollTo:a=>{var f;(f=h.value)==null||f.scrollTo(a)},getNode:a=>{var f;return h.value?h.value.getNode(a):(f=$.value.get(a))==null?void 0:f.rawData}}),Oe(l,a=>{a&&D(),M()});const m=()=>{e.searchable!=="overlay"&&setTimeout(D)},I=()=>{e.multiple?M():s(!1)},k=a=>{C(e.onFocus,a)},E=a=>{T.markAsBlurred(),C(e.onBlur,a)},P=a=>{D(),q(a)};Ue(ye,{props:e,slots:o,config:v,locale:F,mergedPrefixCls:u,mergedChildrenKey:g,mergedGetKey:b,mergedLabelKey:K,expandedKeys:O,mergedNodeMap:$,inputValue:B,setInputValue:R,treeRef:h,accessor:T,setExpandedKeys:U,overlayOpened:l,setOverlayOpened:s,handleNodeClick:I,selectedValue:H,changeSelected:_});const N=x(()=>{const{overlayClassName:a,multiple:f}=e,S=u.value;return Ge({[c.value]:!!c.value,[d.value]:!!d.value,[`${S}-overlay`]:!0,[`${S}-overlay-multiple`]:f,[a||""]:!!a})}),V=({focused:a,disabled:f,clearable:S,clearIcon:z,opened:Y})=>[A(ze,We({ref:p,class:u.value,allowInput:e.searchable===!0?"searchable":!1,autocomplete:e.autocomplete,autofocus:e.autofocus,borderless:e.borderless,clearable:S,clearIcon:z,dataSource:j.value,disabled:f,focused:a,maxLabel:e.maxLabel,multiple:e.multiple,opened:Y,placeholder:e.placeholder,readonly:e.readonly,size:G.value,status:W.value,suffix:e.suffix,onClear:X,onInputValueChange:R,onItemRemove:P},n),o)],J=a=>{const{spin:f}=e,S=te(f)?{spinning:f}:f;return S?A(Re,S,{default:()=>[a]}):a},Q=()=>J(A(Je,{onMousedown:m},null));return()=>{var f,S,z;const a={autofocus:e.autofocus,clearable:e.clearable,clearIcon:e.clearIcon,disabled:T.disabled||e.readonly,readonly:e.readonly,value:H.value,open:l.value,offset:(f=e.offset)!=null?f:v.offset,overlayClassName:N.value,overlayContainer:(S=e.overlayContainer)!=null?S:v.overlayContainer,overlayContainerFallback:`.${u.value}-overlay-container`,overlayMatchWidth:(z=e.overlayMatchWidth)!=null?z:v.overlayMatchWidth,"onUpdate:open":s,onFocus:k,onBlur:E};return A(Ve,a,{trigger:V,overlay:Q})}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const ta=Ze;export{ta as I};
