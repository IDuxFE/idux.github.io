import{P as Ne,m,ao as ge,aV as ke,c as Ke,ad as Be,M as ce,N as De,aw as Le,K as Me,r as Te,aa as Ee,ae as Pe,af as Ve,ax as ze,ay as Oe,az as Re,aA as $e,aG as we}from"./index-c73ba825.js";import{c as C,at as de,t as He,l as pe,x as Ge,r as se,p as x,i as Ue,w as je,m as We,B as Xe,n as _e,ac as fe}from"./vendor-deae6a9f.js";import{I as qe}from"./index-c860b55c.js";/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function Je(e,n,t,o){return{mergedNodeMap:C(()=>{const l=new Map,i=he(e,e.dataSource,n.value,t.value,o.value);return ue(i,l),l})}}function he(e,n,t,o,r,l){const{treeDisabled:i,loadChildren:y}=e;return n.map(A=>me(A,t,o,r,i,!!y,l))}function me(e,n,t,o,r,l,i){var N;const y=t(e),{check:A,drag:c,drop:f,select:S}=Qe(e,r),F=e[n],D=e[o],p=F==null?void 0:F.map(I=>me(I,n,t,o,r,l,y));return{children:p,label:D,key:y,isLeaf:(N=e.isLeaf)!=null?N:!(p!=null&&p.length||l),parentKey:i,rawData:e,checkDisabled:A,dragDisabled:c,dropDisabled:f,selectDisabled:S}}function Qe(e,n){const t=e.disabled;if(de(t))return{check:t,drag:t,drop:t,select:t};{let{drag:o,drop:r,select:l}=t!=null?t:{},i;if(n){const y=n(e);de(y)?(i!=null||(i=y),o!=null||(o=y),r!=null||(r=y),l!=null||(l=y)):(o!=null||(o=y.drag),r!=null||(r=y.drop),l!=null||(l=y.select),i!=null||(i=y.select))}return{check:i,drag:o,drop:r,select:l}}}function ue(e,n){e.forEach(t=>{const{key:o,children:r}=t;n.set(o,t),r&&ue(r,n)})}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function Ye(e,n,t){const o=C(()=>Ne(n.value)),r=C(()=>{const c=t.value;return o.value.map(f=>c.get(f)).filter(Boolean)}),l=c=>{const f=e.multiple?c:c[0],S=He(n.value);f!==S&&(n.setValue(f),m(e.onChange,f,S))};return{selectedValue:o,selectedNodes:r,changeSelected:c=>{!e.multiple&&!c.length||l(c)},handleRemove:c=>{l(o.value.filter(f=>c!==f))},handleClear:c=>{l([]),m(e.onClear,c)}}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const Se=Symbol("treeSelectToken"),Ze=pe({setup(){const{config:e,props:n,slots:t,locale:o,mergedPrefixCls:r,mergedChildrenKey:l,mergedGetKey:i,mergedLabelKey:y,mergedNodeMap:A,inputValue:c,setInputValue:f,treeRef:S,expandedKeys:F,setExpandedKeys:D,selectedValue:p,changeSelected:N,handleNodeClick:I}=Ge(Se),[L,H]=ge(n,"loadedKeys",()=>[]),k=se(!1),V=C(()=>n.multiple&&n.checkable),G=C(()=>V.value?n.cascaderStrategy:"off"),K=(d,s,u)=>{const{onScrolledChange:v}=n;m(v,d,s,u.map(h=>h.rawData))},O=d=>{d.stopPropagation()},U=(d,s)=>{const{onCheck:u}=n;m(u,d,s),I()},j=(d,s)=>{var v;const{onSelect:u}=n;!n.multiple&&((v=p.value)==null?void 0:v[0])!==s.key&&m(u,d,s),I()},z=(d,s)=>{const{onExpand:u}=n;m(u,d,s)},R=(d,s)=>{const{onExpandedChange:u}=n;m(u,d,s),D(d)},W=d=>{var u,v;const s=k.value;s?(u=S.value)==null||u.expandAll():(v=S.value)==null||v.collapseAll(),k.value=!s,d.stopPropagation()},X=async(d,s)=>{const u=l.value,v=y.value,h=i.value,M=s[u],T=h(s),E=A.value,B=E.get(T);if(M.length&&B){const P=he(n,M,u,h,v,T);ue(P,E),B.rawData[u]=M,B.children=P,H(d),m(n.onLoaded,d,s)}},_=C(()=>{var d;return(d=n.clearIcon)!=null?d:e.clearIcon}),q=d=>{const{value:s}=d.target;f(s),n.searchable&&m(n.onSearch,s)},$=()=>{f(""),n.searchable&&m(n.onSearch,"")};return()=>{const{customAdditional:d,dataSource:s,draggable:u,draggableIcon:v,empty:h,expandIcon:M,multiple:T,leafLineIcon:E,virtual:B,virtualItemHeight:P,searchable:J,showLine:Q,searchPlaceholder:Y,onDragstart:Z,onDragend:ee,onDragenter:ae,onDragleave:ne,onDragover:te,onDrop:le,onNodeClick:a,onNodeContextmenu:g,onScroll:b,onScrolledBottom:w,droppable:be,treeDisabled:Ce,loadChildren:xe,searchFn:oe,overlayRender:ie,overlayHeight:Ae}=n,Fe=r.value,Ie={label:t.treeLabel,prefix:t.treePrefix,suffix:t.treeSuffix,leafLineIcon:t.leafLineIcon,empty:t.empty,expandIcon:t.expandIcon,draggableIcon:t.draggableIcon},re=[x(qe,{ref:S,blocked:!0,checkOnClick:!0,checkedKeys:p.value,customAdditional:d,expandedKeys:F.value,loadedKeys:L.value,labelKey:y.value,checkable:V.value,cascaderStrategy:G.value,childrenKey:l.value,dataSource:s,draggable:u,draggableIcon:v,droppable:be,disabled:Ce,empty:h,expandIcon:M,getKey:i.value,height:Ae,loadChildren:xe,leafLineIcon:E,virtual:B,virtualItemHeight:P,selectable:T?"multiple":!0,selectedKeys:p.value,searchValue:oe!==!1?c.value:void 0,searchFn:Ue(oe)?oe:void 0,showLine:Q,onClick:O,onCheck:U,onDragstart:Z,onDragend:ee,onDragenter:ae,onDragleave:ne,onDragover:te,onDrop:le,onNodeClick:a,onNodeContextmenu:g,onExpand:z,onSelect:j,onLoaded:X,onCheckedChange:N,onSelectedChange:V.value?ke:N,onExpandedChange:R,onScroll:b,onScrolledBottom:w,onScrolledChange:K},Ie)];if(J==="overlay"){const ye=c.value;re.unshift(x("div",{class:`${Fe}-overlay-search-wrapper`},[x(Ke,{size:"xs",shape:"square",title:k.value?o.treeSelect.expandAll:o.treeSelect.collapseAll,icon:k.value?"expand-all":"collapse-all",onClick:W},null),x(Be,{clearable:!0,clearIcon:_.value,clearVisible:!!ye,size:"sm",suffix:"search",value:ye,placeholder:Y,onClear:$,onInput:q},null)]))}return x("div",{tabindex:-1},[ie?ie(re):re])}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const ea={control:{type:[String,Number,Object,Array],default:void 0},value:{type:null,default:void 0},open:{type:Boolean,default:void 0},expandedKeys:{type:Array,default:void 0},loadedKeys:{type:Array,default:void 0},autocomplete:{type:String,default:"off"},autofocus:{type:Boolean,default:!1},borderless:{type:Boolean,default:void 0},childrenKey:{type:String,default:void 0},cascaderStrategy:{type:String,default:"off"},checkable:{type:Boolean,default:!1},clearable:{type:Boolean,default:!1},clearIcon:{type:String,default:void 0},customAdditional:{type:Function,default:void 0},dataSource:{type:Array,default:()=>[]},disabled:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},draggableIcon:{type:String,default:void 0},droppable:{type:Function,default:void 0},empty:{type:[String,Object],default:"simple"},expandIcon:{type:[String,Function,Array],default:void 0},getKey:{type:[String,Function],default:void 0},labelKey:{type:String,default:void 0},leafLineIcon:{type:String,default:void 0},loadChildren:{type:Function,default:void 0},maxLabel:{type:[Number,String],default:Number.MAX_SAFE_INTEGER},multiple:{type:Boolean,default:!1},offset:Array,overlayClassName:{type:String,default:void 0},overlayContainer:{type:[String,HTMLElement,Function],default:void 0},overlayMatchWidth:{type:Boolean,default:void 0},overlayRender:{type:Function,default:void 0},placeholder:{type:String,default:void 0},readonly:{type:Boolean,default:!1},searchable:{type:[Boolean,String],default:!1},searchFn:{type:[Boolean,Function],default:!0},searchPlaceholder:{type:String,default:void 0},size:{type:String,default:void 0},spin:{type:[Boolean,Object],default:void 0},showLine:{type:Boolean,default:void 0},status:String,suffix:{type:String,default:void 0},treeDisabled:{type:Function,default:void 0},virtual:{type:Boolean,default:!1},virtualItemHeight:{type:Number,default:void 0},"onUpdate:value":[Function,Array],"onUpdate:open":[Function,Array],"onUpdate:expandedKeys":[Function,Array],"onUpdate:loadedKeys":[Function,Array],onCheck:[Function,Array],onChange:[Function,Array],onClear:[Function,Array],onDragstart:[Function,Array],onDragend:[Function,Array],onDragenter:[Function,Array],onDragleave:[Function,Array],onDragover:[Function,Array],onDrop:[Function,Array],onFocus:[Function,Array],onBlur:[Function,Array],onExpand:[Function,Array],onExpandedChange:[Function,Array],onLoaded:[Function,Array],onNodeClick:[Function,Array],onNodeContextmenu:[Function,Array],onSearch:[Function,Array],onSelect:[Function,Array],onScroll:[Function,Array],onScrolledChange:[Function,Array],onScrolledBottom:[Function,Array],overlayHeight:{type:Number,default:256}};/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function ve(e){const{fontSizeSm:n,heightMd:t,marginSizeSm:o,paddingSizeXs:r,paddingSizeSm:l,paddingSizeMd:i}=e;return{optionFontSize:n,optionHeight:t,optionPadding:`${l}px ${i}px`,optionMarginLeft:o,optionContainerPadding:`${r}px 0`,optionContainerTreeNodePadding:`0 0 0 ${l}px`,overlaySearchWrapperPadding:`${r}px ${i}px ${l}px`}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const aa=(e,n)=>ve(e),na=pe({name:"IxTreeSelect",inheritAttrs:!1,props:ea,setup(e,{attrs:n,expose:t,slots:o}){const r=ce("common"),{globalHashId:l,hashId:i,registerToken:y}=De("treeSelect");y(aa);const A=ce("locale"),c=ce("treeSelect"),f=C(()=>`${r.prefixCls}-tree-select`),S=C(()=>{var a;return(a=e.childrenKey)!=null?a:c.childrenKey}),F=Le(e,c),D=C(()=>{var a;return(a=e.labelKey)!=null?a:c.labelKey}),p=se(),[N,I]=Me(""),L=()=>{var a;return(a=p.value)==null?void 0:a.focus()},H=()=>{var a;return(a=p.value)==null?void 0:a.blur()},k=()=>{var a;e.searchable==="overlay"?I(""):(a=p.value)==null||a.clearInput()},[V,G]=ge(e,"expandedKeys",()=>[]),{accessor:K,control:O}=Te();Ee(O);const U=Pe(e,c),j=Ve(e,O),{mergedNodeMap:z}=Je(e,S,F,D),{selectedValue:R,selectedNodes:W,changeSelected:X,handleRemove:_,handleClear:q}=Ye(e,K,z),{overlayRef:$,overlayStyle:d,updateOverlay:s,overlayOpened:u,setOverlayOpened:v}=ze(e,c,p),h=se();t({focus:L,blur:H,collapseAll:()=>{var a;return(a=h.value)==null?void 0:a.collapseAll()},expandAll:()=>{var a;return(a=h.value)==null?void 0:a.expandAll()},scrollTo:a=>{var g;(g=h.value)==null||g.scrollTo(a)},getNode:a=>{var g;return h.value?h.value.getNode(a):(g=z.value.get(a))==null?void 0:g.rawData}}),je(u,a=>{a&&L(),k()});const T=()=>{e.searchable!=="overlay"&&setTimeout(L)},E=()=>{e.multiple?k():v(!1)},B=a=>{m(e.onFocus,a)},P=a=>{K.markAsBlurred(),v(!1),m(e.onBlur,a)},{focused:J,bindOverlayMonitor:Q,handleFocus:Y,handleBlur:Z}=Oe(B,P);We(()=>{Q($,u)});const ee=a=>{L(),_(a)};Xe(Se,{props:e,slots:o,config:c,locale:A,mergedPrefixCls:f,mergedChildrenKey:S,mergedGetKey:F,mergedLabelKey:D,expandedKeys:V,mergedNodeMap:z,inputValue:N,setInputValue:I,treeRef:h,accessor:K,setExpandedKeys:G,overlayOpened:u,setOverlayOpened:v,handleNodeClick:E,selectedValue:R,changeSelected:X});const ae=C(()=>{const{overlayClassName:a,multiple:g}=e,b=f.value;return _e({[l.value]:!!l.value,[i.value]:!!i.value,[`${b}-overlay`]:!0,[`${b}-overlay-multiple`]:g,[a||""]:!!a})}),ne=()=>x($e,fe({ref:p,className:f.value,allowInput:!1,autocomplete:e.autocomplete,autofocus:e.autofocus,borderless:e.borderless,clearable:e.clearable,clearIcon:e.clearIcon,config:c,dataSource:W.value,disabled:K.disabled,focused:J.value,maxLabel:e.maxLabel,multiple:e.multiple,opened:u.value,placeholder:e.placeholder,readonly:e.readonly,searchable:e.searchable,size:U.value,status:j.value,suffix:e.suffix,value:R.value,onFocus:Y,onBlur:Z,onClear:q,onInputValueChange:I,onItemRemove:ee,onOpenedChange:v,onResize:s,onSearch:e.onSearch},n),o),te=a=>{const{spin:g}=e,b=de(g)?{spinning:g}:g;return b?x(we,b,{default:()=>[a]}):a},le=()=>te(x(Ze,{onMousedown:T},null));return()=>{var b,w;const a={class:ae.value,style:d.value,clickOutside:!1,container:(b=e.overlayContainer)!=null?b:c.overlayContainer,containerFallback:`.${f.value}-overlay-container`,disabled:K.disabled||e.readonly,offset:(w=e.offset)!=null?w:c.offset,placement:"bottomStart",transitionName:`${r.prefixCls}-slide-auto`,trigger:"manual",triggerId:n.id,visible:u.value,"onUpdate:visible":v},g={default:ne,content:le};return x(Re,fe({ref:$},a),g)}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const ra=na;export{ra as I};
