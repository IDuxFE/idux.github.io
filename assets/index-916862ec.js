import{an as Ie,m,ao as ne,aU as Ne,c as ke,a9 as Ke,M as ae,N as Be,aw as De,ak as Le,r as Me,a6 as Te,aa as Ee,ab as Pe,ay as Ve,az as ze,aF as Re}from"./index-ab015422.js";import{c as b,au as te,t as $e,l as se,y as we,r as le,q as C,i as He,w as Oe,D as Ue,p as Ge,a8 as We}from"./vendor-885c608a.js";import{I as je}from"./index-d81e4818.js";/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function qe(e,n,t,o){return{mergedNodeMap:b(()=>{const r=new Map,u=ue(e,e.dataSource,n.value,t.value,o.value);return oe(u,r),r})}}function ue(e,n,t,o,d,r){const{treeDisabled:u,loadChildren:i}=e;return n.map(x=>ie(x,t,o,d,u,!!i,r))}function ie(e,n,t,o,d,r,u){var N;const i=t(e),{check:x,drag:s,drop:g,select:S}=Xe(e,d),A=e[n],D=e[o],v=A==null?void 0:A.map(F=>ie(F,n,t,o,d,r,i));return{children:v,label:D,key:i,isLeaf:(N=e.isLeaf)!=null?N:!(v!=null&&v.length||r),parentKey:u,rawData:e,checkDisabled:x,dragDisabled:s,dropDisabled:g,selectDisabled:S}}function Xe(e,n){const t=e.disabled;if(te(t))return{check:t,drag:t,drop:t,select:t};{let{drag:o,drop:d,select:r}=t!=null?t:{},u;if(n){const i=n(e);te(i)?(u!=null||(u=i),o!=null||(o=i),d!=null||(d=i),r!=null||(r=i)):(o!=null||(o=i.drag),d!=null||(d=i.drop),r!=null||(r=i.select),u!=null||(u=i.select))}return{check:u,drag:o,drop:d,select:r}}}function oe(e,n){e.forEach(t=>{const{key:o,children:d}=t;n.set(o,t),d&&oe(d,n)})}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function _e(e,n,t){const o=b(()=>Ie(n.value)),d=b(()=>{const s=t.value;return o.value.map(g=>s.get(g)).filter(Boolean)}),r=s=>{const g=e.multiple?s:s[0],S=$e(n.value);g!==S&&(n.setValue(g),m(e.onChange,g,S))};return{selectedValue:o,selectedNodes:d,changeSelected:s=>{!e.multiple&&!s.length||r(s)},handleRemove:s=>{r(o.value.filter(g=>s!==g))},handleClear:s=>{r([]),m(e.onClear,s)}}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const ye=Symbol("treeSelectToken"),Je=se({setup(){const{config:e,props:n,slots:t,locale:o,mergedPrefixCls:d,mergedChildrenKey:r,mergedGetKey:u,mergedLabelKey:i,mergedNodeMap:x,inputValue:s,setInputValue:g,treeRef:S,expandedKeys:A,setExpandedKeys:D,selectedValue:v,changeSelected:N,handleNodeClick:F}=we(ye),[L,O]=ne(n,"loadedKeys",()=>[]),k=le(!1),z=b(()=>n.multiple&&n.checkable),U=b(()=>z.value?n.cascaderStrategy:"off"),M=(c,l,y)=>{const{onScrolledChange:p}=n;m(p,c,l,y.map(I=>I.rawData))},w=c=>{c.stopPropagation()},G=(c,l)=>{const{onCheck:y}=n;m(y,c,l),F()},W=(c,l)=>{var p;const{onSelect:y}=n;!n.multiple&&((p=v.value)==null?void 0:p[0])!==l.key&&m(y,c,l),F()},R=(c,l)=>{const{onExpand:y}=n;m(y,c,l)},H=(c,l)=>{const{onExpandedChange:y}=n;m(y,c,l),D(c)},j=c=>{var y,p;const l=k.value;l?(y=S.value)==null||y.expandAll():(p=S.value)==null||p.collapseAll(),k.value=!l,c.stopPropagation()},q=async(c,l)=>{const y=r.value,p=i.value,I=u.value,K=l[y],T=I(l),E=x.value,B=E.get(T);if(K.length&&B){const P=ue(n,K,y,I,p,T);oe(P,E),B.rawData[y]=K,B.children=P,O(c),m(n.onLoaded,c,l)}},X=b(()=>{var c;return(c=n.clearIcon)!=null?c:e.clearIcon}),_=c=>{const{value:l}=c.target;g(l),n.searchable&&m(n.onSearch,l)},$=()=>{g(""),n.searchable&&m(n.onSearch,"")};return()=>{const{customAdditional:c,dataSource:l,draggable:y,draggableIcon:p,empty:I,expandIcon:K,multiple:T,leafLineIcon:E,virtual:B,virtualItemHeight:P,searchable:J,showLine:Q,searchPlaceholder:a,onDragstart:f,onDragend:h,onDragenter:V,onDragleave:Y,onDragover:fe,onDrop:ge,onNodeClick:ve,onNodeContextmenu:pe,onScroll:he,onScrolledBottom:me,droppable:Se,treeDisabled:be,loadChildren:Ce,searchFn:Z,overlayRender:re,overlayHeight:xe}=n,Ae=d.value,Fe={label:t.treeLabel,prefix:t.treePrefix,suffix:t.treeSuffix,leafLineIcon:t.leafLineIcon,empty:t.empty,expandIcon:t.expandIcon,draggableIcon:t.draggableIcon},ee=[C(je,{ref:S,blocked:!0,checkOnClick:!0,checkedKeys:v.value,customAdditional:c,expandedKeys:A.value,loadedKeys:L.value,labelKey:i.value,checkable:z.value,cascaderStrategy:U.value,childrenKey:r.value,dataSource:l,draggable:y,draggableIcon:p,droppable:Se,disabled:be,empty:I,expandIcon:K,getKey:u.value,height:xe,loadChildren:Ce,leafLineIcon:E,virtual:B,virtualItemHeight:P,selectable:T?"multiple":!0,selectedKeys:v.value,searchValue:Z!==!1?s.value:void 0,searchFn:He(Z)?Z:void 0,showLine:Q,onClick:w,onCheck:G,onDragstart:f,onDragend:h,onDragenter:V,onDragleave:Y,onDragover:fe,onDrop:ge,onNodeClick:ve,onNodeContextmenu:pe,onExpand:R,onSelect:W,onLoaded:q,onCheckedChange:N,onSelectedChange:z.value?Ne:N,onExpandedChange:H,onScroll:he,onScrolledBottom:me,onScrolledChange:M},Fe)];if(J==="overlay"){const ce=s.value;ee.unshift(C("div",{class:`${Ae}-overlay-search-wrapper`},[C(ke,{size:"xs",shape:"square",title:k.value?o.treeSelect.expandAll:o.treeSelect.collapseAll,icon:k.value?"expand-all":"collapse-all",onClick:j},null),C(Ke,{clearable:!0,clearIcon:X.value,clearVisible:!!ce,size:"sm",suffix:"search",value:ce,placeholder:a,onClear:$,onInput:_},null)]))}return C("div",{tabindex:-1},[re?re(ee):ee])}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const Qe={control:{type:[String,Number,Object,Array],default:void 0},value:{type:null,default:void 0},open:{type:Boolean,default:void 0},expandedKeys:{type:Array,default:void 0},loadedKeys:{type:Array,default:void 0},autocomplete:{type:String,default:"off"},autofocus:{type:Boolean,default:!1},borderless:{type:Boolean,default:void 0},childrenKey:{type:String,default:void 0},cascaderStrategy:{type:String,default:"off"},checkable:{type:Boolean,default:!1},clearable:{type:Boolean,default:!1},clearIcon:{type:String,default:void 0},customAdditional:{type:Function,default:void 0},dataSource:{type:Array,default:()=>[]},disabled:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},draggableIcon:{type:String,default:void 0},droppable:{type:Function,default:void 0},empty:{type:[String,Object],default:"simple"},expandIcon:{type:[String,Function,Array],default:void 0},getKey:{type:[String,Function],default:void 0},labelKey:{type:String,default:void 0},leafLineIcon:{type:String,default:void 0},loadChildren:{type:Function,default:void 0},maxLabel:{type:[Number,String],default:Number.MAX_SAFE_INTEGER},multiple:{type:Boolean,default:!1},offset:Array,overlayClassName:{type:String,default:void 0},overlayContainer:{type:[String,HTMLElement,Function],default:void 0},overlayMatchWidth:{type:[Boolean,String],default:void 0},overlayRender:{type:Function,default:void 0},placeholder:{type:String,default:void 0},readonly:{type:Boolean,default:!1},searchable:{type:[Boolean,String],default:!1},searchFn:{type:[Boolean,Function],default:!0},searchPlaceholder:{type:String,default:void 0},size:{type:String,default:void 0},spin:{type:[Boolean,Object],default:void 0},showLine:{type:Boolean,default:void 0},status:String,suffix:{type:String,default:void 0},treeDisabled:{type:Function,default:void 0},virtual:{type:Boolean,default:!1},virtualItemHeight:{type:Number,default:void 0},"onUpdate:value":[Function,Array],"onUpdate:open":[Function,Array],"onUpdate:expandedKeys":[Function,Array],"onUpdate:loadedKeys":[Function,Array],onCheck:[Function,Array],onChange:[Function,Array],onClear:[Function,Array],onDragstart:[Function,Array],onDragend:[Function,Array],onDragenter:[Function,Array],onDragleave:[Function,Array],onDragover:[Function,Array],onDrop:[Function,Array],onFocus:[Function,Array],onBlur:[Function,Array],onExpand:[Function,Array],onExpandedChange:[Function,Array],onLoaded:[Function,Array],onNodeClick:[Function,Array],onNodeContextmenu:[Function,Array],onSearch:[Function,Array],onSelect:[Function,Array],onScroll:[Function,Array],onScrolledChange:[Function,Array],onScrolledBottom:[Function,Array],overlayHeight:{type:Number,default:256}};/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function de(e){const{fontSizeSm:n,heightMd:t,marginSizeSm:o,paddingSizeXs:d,paddingSizeSm:r,paddingSizeMd:u}=e;return{optionFontSize:n,optionHeight:t,optionPadding:`${r}px ${u}px`,optionMarginLeft:o,optionContainerPadding:`${d}px 0`,optionContainerTreeNodePadding:`0 0 0 ${u}px`,overlaySearchWrapperPadding:`${d}px ${u}px ${r}px`}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const Ye=(e,n)=>de(e),Ze=se({name:"IxTreeSelect",inheritAttrs:!1,props:Qe,setup(e,{attrs:n,expose:t,slots:o}){const d=ae("common"),{globalHashId:r,hashId:u,registerToken:i}=Be("treeSelect");i(Ye);const x=ae("locale"),s=ae("treeSelect"),g=b(()=>`${d.prefixCls}-tree-select`),S=b(()=>{var a;return(a=e.childrenKey)!=null?a:s.childrenKey}),A=De(e,s),D=b(()=>{var a;return(a=e.labelKey)!=null?a:s.labelKey}),v=le(),[N,F]=Le(""),L=()=>{var a;return(a=v.value)==null?void 0:a.focus()},O=()=>{var a;return(a=v.value)==null?void 0:a.blur()},k=()=>{var a;e.searchable==="overlay"?F(""):(a=v.value)==null||a.clearInput()},[z,U]=ne(e,"expandedKeys",()=>[]),{accessor:M,control:w}=Me();Te(w);const G=Ee(e,s),W=Pe(e,w),{mergedNodeMap:R}=qe(e,S,A,D),{selectedValue:H,selectedNodes:j,changeSelected:q,handleRemove:X,handleClear:_}=_e(e,M,R),[$,c]=ne(e,"open",!1),l=le();t({focus:L,blur:O,collapseAll:()=>{var a;return(a=l.value)==null?void 0:a.collapseAll()},expandAll:()=>{var a;return(a=l.value)==null?void 0:a.expandAll()},scrollTo:a=>{var f;(f=l.value)==null||f.scrollTo(a)},getNode:a=>{var f;return l.value?l.value.getNode(a):(f=R.value.get(a))==null?void 0:f.rawData}}),Oe($,a=>{a&&L(),k()});const p=()=>{e.searchable!=="overlay"&&setTimeout(L)},I=()=>{e.multiple?k():c(!1)},K=a=>{m(e.onFocus,a)},T=a=>{M.markAsBlurred(),m(e.onBlur,a)},E=a=>{L(),X(a)};Ue(ye,{props:e,slots:o,config:s,locale:x,mergedPrefixCls:g,mergedChildrenKey:S,mergedGetKey:A,mergedLabelKey:D,expandedKeys:z,mergedNodeMap:R,inputValue:N,setInputValue:F,treeRef:l,accessor:M,setExpandedKeys:U,overlayOpened:$,setOverlayOpened:c,handleNodeClick:I,selectedValue:H,changeSelected:q});const B=b(()=>{const{overlayClassName:a,multiple:f}=e,h=g.value;return Ge({[r.value]:!!r.value,[u.value]:!!u.value,[`${h}-overlay`]:!0,[`${h}-overlay-multiple`]:f,[a||""]:!!a})}),P=({focused:a,disabled:f,clearable:h,clearIcon:V,opened:Y})=>[C(ze,We({ref:v,class:g.value,allowInput:e.searchable===!0?"searchable":!1,autocomplete:e.autocomplete,autofocus:e.autofocus,borderless:e.borderless,clearable:h,clearIcon:V,dataSource:j.value,disabled:f,focused:a,maxLabel:e.maxLabel,multiple:e.multiple,opened:Y,placeholder:e.placeholder,readonly:e.readonly,size:G.value,status:W.value,suffix:e.suffix,onClear:_,onInputValueChange:F,onItemRemove:E},n),o)],J=a=>{const{spin:f}=e,h=te(f)?{spinning:f}:f;return h?C(Re,h,{default:()=>[a]}):a},Q=()=>J(C(Je,{onMousedown:p},null));return()=>{var f,h,V;const a={autofocus:e.autofocus,clearable:e.clearable,clearIcon:e.clearIcon,disabled:M.disabled||e.readonly,readonly:e.readonly,value:H.value,open:$.value,offset:(f=e.offset)!=null?f:s.offset,overlayClassName:B.value,overlayContainer:(h=e.overlayContainer)!=null?h:s.overlayContainer,overlayContainerFallback:`.${g.value}-overlay-container`,overlayMatchWidth:(V=e.overlayMatchWidth)!=null?V:s.overlayMatchWidth,"onUpdate:open":c,onFocus:K,onBlur:T};return C(Ve,a,{trigger:P,overlay:Q})}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const ta=Ze;export{ta as I};
