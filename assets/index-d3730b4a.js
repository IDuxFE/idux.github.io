import{m as $,aq as ne,A as j,at as Ne,j as Pe,a8 as Ee,M as be,N as Te,aw as Oe,H as He,aM as qe,av as ze}from"./index-a1eb659d.js";import{d as q,c as m,r as H,Z as Me,w as Ue,f as je,v as xe,i as _e,_ as Re,P as We,l as V,x as Z,n as K,p as Ve,ab as fe,B as Ge,M as Xe}from"./vendor-4aa48d2c.js";/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function te(e,n,a){if(a){const o=[],t=e.value;n.forEach(l=>{const r=t.get(l);r&&o.push(r.rawNode)}),$(a,n,o)}}function ae(e,n){const a=[],{children:o}=e||{};return o&&o.forEach(t=>{const{key:l}=t;n!=null&&n.includes(l)||a.push(t.key),a.push(...ae(t,n))}),a}function oe(e,n,a){const o=[];for(;n&&!q(n.parentKey);){const{parentKey:t}=n;a!=null&&a.includes(n.parentKey)||o.push(t),n=e.get(t)}return o}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function Ye(e,n){const[a,o]=ne(e,"checkedKeys",()=>[]),t=m(()=>{const s=[];return e.checkable&&n.value.forEach((f,d)=>{f.checkDisabled&&s.push(d)}),s}),l=m(()=>e.cascaderStrategy!=="off"?Je(n.value,a.value,t.value):a.value),r=m(()=>{const s=l.value;if(s.length===0||e.cascaderStrategy==="off")return[];const f=new Set,d=n.value;return s.forEach(u=>{const{parentKey:x}=d.get(u)||{};if(!q(x)){let g=d.get(x);if(g&&!s.includes(g.key))for(f.add(x);g&&!q(g.parentKey);)f.add(g.parentKey),g=d.get(g.parentKey)}}),[...f]}),c=s=>{const f=s.key,d=n.value,u=t.value,x=e.cascaderStrategy,g=x!=="off",w=g?ae(s,u):[],F=l.value.indexOf(f);let D=[...l.value];const S=F>-1||!!w.length&&w.every(i=>D.includes(i)||r.value.includes(i));if(S){const i=g?oe(d,s,u):[];D.splice(F,1),D=D.filter(y=>!i.includes(y)&&!w.includes(y))}else D.push(f),g&&De(d,s,D,u),D.push(...w);h(S,s.rawNode,Ze(x,D,d,u))},h=(s,f,d)=>{const{onCheck:u,onCheckedChange:x}=e;$(u,!s,f),o(d),te(n,d,x)};return{checkedKeys:a,allCheckedKeys:l,checkDisabledKeys:t,indeterminateKeys:r,handleCheck:c}}function De(e,n,a,o){let t=!0;for(;t&&n&&!q(n.parentKey);){const l=e.get(n.parentKey);l&&!o.includes(n.parentKey)&&(t=l.children.every(r=>o.includes(r.key)||a.includes(r.key)),t&&a.push(n.parentKey)),n=l}}function Ze(e,n,a,o){if(e==="off")return[...new Set(n)];let t=[];n=Se(a,n,o),o.length&&(t=n.filter(l=>o.includes(l)));for(const l of n){const r=a.get(l);if(r){const c=r.key,h=r.parentKey;e==="parent"?n.includes(h)||t.push(c):e==="child"?r.isLeaf&&t.push(c):t.push(c)}}return[...new Set(t)]}function Je(e,n,a){let o=[...n],t;for(const l of n){const r=e.get(l),c=r==null?void 0:r.parentKey,h=ae(r,a);o=o.concat(h),!q(c)&&t!==c&&(De(e,r,o,a),t=c)}return o=Se(e,[...new Set(o)],a),o}function Se(e,n,a){let o=[...n];if(a.length){for(const t of a)if(!o.includes(t)){const l=e.get(t),r=oe(e,l,a);o=o.filter(c=>!r.includes(c))}}return o}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function Qe(e,n,a,o){const t=m(()=>we(e,e.dataSource,n.value,a.value,o.value)),l=m(()=>{const r=new Map;return he(t.value,r),r});return{mergedNodes:t,mergedNodeMap:l}}function en(e,{expandedKeys:n},a,o){return m(()=>{const{searchValue:t}=a,l=new Map(n.value.map((c,h)=>[c,h])),r=new Map(o.value.map((c,h)=>[c,h]));return t&&!r.size?[]:l.size||r.size?an(e.value,l,r):e.value.map(c=>({...c,expanded:!1,level:0}))})}function we(e,n,a,o,t,l,r,c){const{cascaderStrategy:h,disabled:s,loadChildren:f}=e,d=q(r)?-1:r;return n.map((u,x)=>Ae(u,a,o,t,s,!!f,x===0,x===n.length-1,d,h,c?[c]:[],l))}function Ae(e,n,a,o,t,l,r,c,h,s,f,d){var S,i;const u=a(e),x=nn(e,t),g=e[n],w=e[o];h++;const F=g==null?void 0:g.map((y,k)=>Ae(y,n,a,o,t,l,k===0,k===g.length-1,h,s,[x,...f],u)),D=tn(x,f,(S=F==null?void 0:F.map(y=>({check:y.checkDisabled,drag:y.dragDisabled,drop:y.dropDisabled,select:y.selectDisabled})))!=null?S:[],s!=="off");return{label:w,key:u,children:F,isFirst:r,isLeaf:(i=e.isLeaf)!=null?i:!(g!=null&&g.length||l),isLast:c,parentKey:d,expanded:!1,level:h,rawNode:e,checkDisabled:D.check,dragDisabled:D.drag,dropDisabled:D.drop,selectDisabled:D.select}}function nn(e,n){const a=e.disabled||{};if(a===!0)return{check:!0,drag:!0,drop:!0,select:!0};let{check:o,drag:t,drop:l,select:r}=a;if(n){const c=n(e)||{};if(c===!0)return{check:!0,drag:!0,drop:!0,select:!0};o=o||c.check,t=t||c.drag,l=l||c.drop,r=r||c.select}return{check:o,drag:t,drop:l,select:r}}function tn(e,n,a,o){const t=l=>e[l]||o&&(n.some(r=>!!r[l])||!!a.length&&a.every(r=>!!r[l]));return{check:t("check"),drag:t("drag"),drop:t("drop"),select:t("select")}}function he(e,n){e.forEach(a=>{const{key:o,children:t}=a;n.set(o,a),t&&he(t,n)})}function Le(e=[],n){const a=[],o=e.length;return e.forEach((t,l)=>{t.isFirst=l===0,t.isLast=l===o-1,n.has(t.key)||n.size==0?(t.hidden=!1,a.push(t)):t.hidden=!0,Le(t.children,n).length>0&&(t.hidden=!1,a.push(t))}),a.length&&(a[0].isFirst=!0,a[a.length-1].isLast=!0),a}function an(e,n,a){const o=[],t=[];return Le(e,a),e.forEach(l=>{for(t.push(l);t.length;){const r=t.pop();if(r){const{children:c,key:h,hidden:s}=r,f=n.has(h);if(r.expanded=f,!s&&o.push(r),c&&f)for(let d=c.length;d>0;d--)!c[d-1].hidden&&t.push(c[d-1])}}}),o}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function on(e,n,{expandedKeys:a,setExpandedKeys:o}){const t=m(()=>{var v;return(v=e.draggableIcon)!=null?v:n.draggableIcon}),l=H(),r=H(),c=H(),h=H(),s=H();let f;const d=()=>{f&&(clearTimeout(f),f=void 0)};Me(()=>d());const u=()=>{q(l.value)||(l.value=void 0,r.value=void 0)},x=()=>{q(c.value)||(c.value=void 0,h.value=void 0,s.value=void 0)},g=(v,b)=>{var L,A;return{evt:v,node:b.rawNode,dragNode:(L=l.value)==null?void 0:L.rawNode,dropNode:(A=c.value)==null?void 0:A.rawNode,dropType:s.value}},w=v=>{D(v,void 0),window.removeEventListener("dragend",w)},F=(v,b)=>{l.value=b,r.value=ae(b),rn(b.key,a.value,o),window.addEventListener("dragend",w),$(e.onDragstart,g(v,b))},D=(v,b)=>{b&&$(e.onDragend,g(v,b)),u(),x()},S=async(v,b)=>{const L=l.value;if(L){d(),L.key!==b.key&&(f=setTimeout(()=>{var N;l.value&&((N=b.children)!=null&&N.length)&&ln(b.key,a.value,o),f=void 0},1e3));const A=await ke(b,L,r.value,v,e.droppable);A?(c.value=b,h.value=A!=="inside"?b.parentKey:void 0,s.value=A):x()}$(e.onDragenter,g(v,b))},i=async(v,b)=>{const L=l.value;if(L){const A=await ke(b,L,r.value,v,e.droppable);A?(c.value=b,h.value=A!=="inside"?b.parentKey:void 0,s.value=A):x()}$(e.onDragover,g(v,b))},y=(v,b)=>{const L=c.value;(L==null?void 0:L.key)===b.key&&!v.currentTarget.contains(v.relatedTarget)&&x(),$(e.onDragleave,g(v,b))},k=(v,b)=>{s.value||x(),$(e.onDrop,g(v,b)),u(),x()};return{draggableIcon:t,dragKey:m(()=>{var v;return(v=l.value)==null?void 0:v.key}),dropKey:m(()=>{var v;return(v=c.value)==null?void 0:v.key}),dropParentKey:h,dropType:s,handleDragstart:F,handleDragend:D,handleDragenter:S,handleDragover:i,handleDragleave:y,handleDrop:k}}function ln(e,n,a){n.indexOf(e)===-1&&a([...n,e])}function rn(e,n,a){const o=n.indexOf(e);if(o!==-1){const t=[...n];t.splice(o,1),a(t)}}async function ke(e,n,a,o,t){const{key:l,children:r=[]}=e;if(n.key===l||a&&a.includes(l))return!1;const{clientY:c}=o,{top:h,height:s}=o.target.getBoundingClientRect(),f=c<h+s/2;let d;if(t){const u={evt:o,isTopHalf:f,dragNode:n.rawNode,dropNode:e.rawNode};d=await t(u)}return(d===void 0||d===!0)&&(r.length>0?d="inside":f?d="before":d="after"),d}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function cn(e,n,a,{expandedKeys:o,handleExpand:t},{activeKey:l,handleSelect:r}){const c=H(!1);return{focused:c,handleFocus:u=>{c.value=!0,$(e.onFocus,u)},handleBlur:u=>{c.value=!0,$(e.onBlur,u)},handleKeydown:u=>{switch(u.code){case"ArrowUp":case"ArrowDown":u.preventDefault()}$(e.onKeydown,u)},handleKeyup:u=>{const x=u.code,g=l.value,w=a.value,F=w.length;if(g===void 0)["ArrowDown","ArrowUp","ArrowLeft","ArrowRight"].includes(x)&&ue(l,w,0,F);else{const D=a.value,S=D.findIndex(i=>i.key===g);if(S===-1)return;switch(x){case"Enter":case"NumpadEnter":r(g);break;case"ArrowDown":ue(l,D,S+1,F);break;case"ArrowUp":ue(l,D,S-1,0,!0);break;case"ArrowLeft":{const{rawNode:i,key:y,parentKey:k}=D[S];if(i.isLeaf||!o.value.includes(y)){const v=k?n.value.get(k):void 0;v&&(l.value=v.key)}else t(y,i)}break;case"ArrowRight":{const{rawNode:i,key:y}=D[S];if(!o.value.includes(y))t(y,i);else for(let k=S+1;k<F;k++){const v=D[k];l.value=v.key;break}}break}}$(e.onKeyup,u)}}}function ue(e,n,a,o,t=!1){let l=a;for(;t?l>=o:l<o;){const r=n[l];if(r.selectDisabled)t?l--:l++;else{e.value=r.key;return}}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function sn(e,n,a,o,t,l,r){const c=m(()=>{var i;return(i=e.expandIcon)!=null?i:n.expandIcon}),[h,s]=ne(e,"expandedKeys",()=>[]),[f,d]=ne(e,"loadedKeys",()=>[]),u=H([]),x=({key:i,expanded:y,node:k})=>{if(je(c.value))return xe(j,{name:c.value,rotate:y?90:0});if(_e(c.value))return c.value({key:i,expanded:y,node:k});if(Re(c.value))return xe(j,{name:y?c.value[0]:c.value[1]})},g=i=>{if(!i||i.length<=0)return;const{onExpandedChange:y}=e,k=l.value,v=new Set(h.value);i.forEach(L=>{oe(k,k.get(L)).forEach(A=>v.add(A))});const b=[...v];s(b),te(l,b,y)};Ue(r,g);const w=async(i,y)=>{var N;const{loadChildren:k}=e;if(u.value.includes(i))return;const v=a.value;if(!((N=y==null?void 0:y[v])!=null&&N.length)){if(!k||u.value.includes(i)||f.value.includes(i))return;u.value.push(i);const E=await k(y);u.value.splice(u.value.indexOf(i),1);const z=l.value,P=z.get(i);if(E!=null&&E.length){const X=P.level,_=we(e,E,v,o.value,t.value,i,X,{check:!!P.checkDisabled,drag:!!P.dragDisabled,drop:!!P.dropDisabled,select:!!P.selectDisabled});he(_,z),P.rawNode[v]=E,P.children=_;const R=[...f.value,i];d(R),$(e.onLoaded,R,y)}else return}const b=h.value.indexOf(i),L=b>=0,A=[...h.value];L?A.splice(b,1):A.push(i),F(L,y,A)},F=(i,y,k)=>{const{onExpand:v,onExpandedChange:b}=e;$(v,!i,y),s(k),te(l,k,b)},D=()=>{const i=[],y=[];l.value.forEach(k=>{k.isLeaf||(i.push(k.key),y.push(k.rawNode))}),$(e.onExpandedChange,i,y),s(i)},S=()=>{$(e.onExpandedChange,[],[]),s([])};return r.value.length&&g(r.value),{expandIconRenderer:x,expandedKeys:h,setExpandedKeys:s,expandAll:D,collapseAll:S,handleExpand:w,loadingKeys:u}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function dn(e,n,a){const o=un(e,a);return{searchedKeys:m(()=>{const{searchValue:l}=e;if(!l)return Ne;const r=o.value,c=[];return n.value.forEach(h=>{r(h.rawNode,l)&&c.push(h.key)}),c})}}function un(e,n){return m(()=>{var a;return(a=e.searchFn)!=null?a:fn(n.value)})}function fn(e){return(n,a)=>{const o=n[e];return o?o.toLowerCase().includes(a.toLowerCase()):!1}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function hn(e,n){const[a,o]=ne(e,"selectedKeys",()=>[]),t=m(()=>e.selectable==="multiple"),l=H();We(()=>{const s=a.value,f=s.length;l.value=f>0?s[f-1]:void 0});const r=m(()=>{const s=l.value;return s!==void 0?n.value.get(s):void 0}),c=s=>{const d=n.value.get(s);if(!d)return;const u=a.value.indexOf(s),x=u>-1;let g=[...a.value];t.value?x?g.splice(u,1):g.push(s):g=x?[]:[s],h(x,d.rawNode,g)},h=(s,f,d)=>{var w;const{onSelect:u,onSelectedChange:x}=e,g=d.includes((w=f.key)!=null?w:"")?!0:!s;$(u,g,f),o(d),te(n,d,x)};return{activeKey:l,activeNode:r,selectedKeys:a,handleSelect:c}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const G=Symbol("treeToken");/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const gn={autoHeight:{type:Boolean,default:void 0},checkedKeys:Array,expandedKeys:Array,indeterminateKeys:Array,loadedKeys:Array,selectedKeys:Array,blocked:{type:Boolean,default:void 0},cascaderStrategy:{type:String,default:"off"},checkable:{type:Boolean,default:!1},childrenKey:String,checkOnClick:{type:Boolean,default:!1},customAdditional:{type:Function,default:void 0},dataSource:{type:Array,default:()=>[]},disabled:Function,draggable:{type:Boolean,default:!1},draggableIcon:{type:String,default:void 0},droppable:Function,empty:{type:[String,Object],default:"simple"},expandIcon:{type:[String,Function,Array],default:void 0},getKey:{type:[String,Function],default:void 0},height:Number,labelKey:String,leafLineIcon:String,loadChildren:Function,searchFn:Function,searchValue:String,selectable:{type:[Boolean,String],default:!0},showLine:{type:Boolean,default:void 0},virtual:{type:Boolean,default:!1},virtualItemHeight:{type:Number,default:28},"onUpdate:checkedKeys":[Function,Array],"onUpdate:expandedKeys":[Function,Array],"onUpdate:loadedKeys":[Function,Array],"onUpdate:selectedKeys":[Function,Array],onCheck:[Function,Array],onCheckedChange:[Function,Array],onDragstart:[Function,Array],onDragend:[Function,Array],onDragenter:[Function,Array],onDragleave:[Function,Array],onDragover:[Function,Array],onDrop:[Function,Array],onExpand:[Function,Array],onExpandedChange:[Function,Array],onLoaded:[Function,Array],onSelect:[Function,Array],onSelectedChange:[Function,Array],onFocus:[Function,Array],onBlur:[Function,Array],onKeydown:[Function,Array],onKeyup:[Function,Array],onNodeClick:[Function,Array],onNodeContextmenu:[Function,Array],onScroll:[Function,Array],onScrolledChange:[Function,Array],onScrolledBottom:[Function,Array]},vn={node:{type:Object,required:!0},isLeaf:{type:Boolean,required:!0},isFirst:{type:Boolean,required:!0},isLast:{type:Boolean,required:!0},label:String,level:{type:Number,required:!0},rawNode:{type:Object,required:!0},expanded:{type:Boolean,required:!0},children:Array,parentKey:[String,Number,Symbol],checkDisabled:{type:Boolean,default:void 0},dragDisabled:{type:Boolean,default:void 0},dropDisabled:{type:Boolean,default:void 0},selectDisabled:{type:Boolean,default:void 0}},yn={node:{type:Object,required:!0},checkDisabled:{type:Boolean,default:void 0}},pn={expanded:{type:Boolean,required:!0},hasTopLine:{type:Boolean,default:void 0},isLeaf:{type:Boolean,default:void 0},nodeKey:{type:[String,Number,Symbol],required:!0},rawNode:{type:Object,required:!0}},bn={disabled:{type:Boolean,default:void 0},node:{type:Object,required:!0},nodeKey:{type:[String,Number,Symbol],required:!0},label:String,selected:{type:Boolean,default:void 0}},xn=V({props:yn,setup(e){const{mergedPrefixCls:n,allCheckedKeys:a,indeterminateKeys:o,handleCheck:t}=Z(G),l=m(()=>a.value.includes(e.node.key)),r=m(()=>o.value.includes(e.node.key)),c=()=>t(e.node);return()=>K(Pe,{class:`${n.value}-node-checkbox`,checked:l.value,disabled:e.checkDisabled,indeterminate:r.value,onChange:c},null)}}),kn=V({props:bn,setup(e){const{props:n,mergedPrefixCls:a,mergedCheckOnClick:o,slots:t,handleSelect:l,handleCheck:r,searchedKeys:c}=Z(G),h=m(()=>c.value.includes(e.nodeKey)),s=d=>{e.disabled||(l(e.nodeKey),o.value&&r(e.node)),$(n.onNodeClick,d,e.node.rawNode)},f=d=>{$(n.onNodeContextmenu,d,e.node.rawNode)};return()=>{var v,b;const{nodeKey:d,label:u,node:x,selected:g}=e,{rawNode:w}=x,{prefix:F,suffix:D}=w,S={key:d,selected:g,node:w},i=((v=t.prefix)==null?void 0:v.call(t,S))||F&&K(j,{name:F},null),y=((b=t.suffix)==null?void 0:b.call(t,S))||D&&K(j,{name:D},null),k=`${a.value}-node-content`;return K("span",{class:k,onClick:s,onContextmenu:f},[i&&K("span",{class:`${k}-prefix`},[i]),K("span",{class:`${k}-label`},[Cn(t.label,u,w,n.searchValue,h.value,k)]),y&&K("span",{class:`${k}-suffix`},[y])])}}});function Cn(e,n,a,o,t,l){if(e)return e({node:a,searchValue:o,searched:t});if(t&&n&&o){const r=n.toUpperCase().indexOf(o.toUpperCase());if(r>-1){const c=r+o.length,h=n.substring(0,r),s=n.substring(c),f=K("span",{class:`${l}-label-highlight`},[n.substring(r,c)]);return[h,f,s]}}return n}const mn=V({props:pn,setup(e){const{mergedPrefixCls:n,slots:a,expandIconRenderer:o,loadingKeys:t,handleExpand:l}=Z(G),r=m(()=>t.value.includes(e.nodeKey)),c=m(()=>{const s=`${n.value}-node-expand`;return Ve({[s]:!0,[`${s}-noop`]:e.isLeaf})}),h=s=>{l(e.nodeKey,e.rawNode),s.stopPropagation()};return()=>{var d,u;const s=`${n.value}-node-expand`;let f;if(r.value)f=K(j,{name:"loading"},null);else if(!e.isLeaf){const{expanded:x,nodeKey:g,rawNode:w}=e;f=(u=(d=a.expandIcon)!=null?d:o)==null?void 0:u({key:g,expanded:x,node:w})}return K("span",{class:c.value,onClick:h},[e.hasTopLine&&K("div",{class:`${s}-top-line`},null),f])}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const Kn=({level:e,noopIdentUnitArr:n,prefixCls:a})=>{const o=[];for(let t=0;t<e;t++)o.push(K("span",{key:t,class:n.includes(t)?`${a}-node-indent-noop-unit`:`${a}-node-indent-unit`},null));return K("span",{"aria-hidden":!0,class:`${a}-node-indent`},[o])},Dn=Kn,Sn=V({setup(){const{props:e,mergedPrefixCls:n,slots:a}=Z(G);return()=>{const o=`${n.value}-node-leaf`;let t;return a.leafLineIcon?t=a.leafLineIcon():e.leafLineIcon?t=K(j,{name:e.leafLineIcon},null):t=K("span",{class:`${o}-line`},null),K("span",{class:o},[t])}}}),Ce=V({props:vn,setup(e){const{props:n,flattedNodes:a,mergedPrefixCls:o,mergedShowLine:t,activeKey:l,selectedKeys:r,slots:c,draggableIcon:h,dragKey:s,dropKey:f,dropParentKey:d,dropType:u,handleDragstart:x,handleDragend:g,handleDragenter:w,handleDragover:F,handleDragleave:D,handleDrop:S}=Z(G),i=Ee(),y=m(()=>l.value===i),k=m(()=>t.value&&e.isLast),v=m(()=>t.value&&!e.isLeaf&&e.level!==0&&e.isFirst),b=m(()=>r.value.includes(i)),L=m(()=>e.selectDisabled||!n.selectable),A=m(()=>s.value===i),N=m(()=>f.value===i),E=m(()=>d.value===i),z=m(()=>N.value&&u.value==="before"),P=m(()=>N.value&&u.value==="inside"),X=m(()=>N.value&&u.value==="after"),_=m(()=>{const C=`${o.value}-node`;return{[C]:!0,[`${C}-active`]:y.value,[`${C}-last`]:k.value,[`${C}-disabled`]:L.value,[`${C}-selected`]:b.value,[`${C}-expanded`]:e.expanded,[`${C}-dragging`]:A.value,[`${C}-dropping`]:N.value,[`${C}-drop-parent`]:E.value,[`${C}-drop-before`]:z.value,[`${C}-drop-inside`]:P.value,[`${C}-drop-after`]:X.value}}),R=C=>{var M;C.stopPropagation(),x(C,e.node),(M=C.dataTransfer)==null||M.setData("text/plain","")},le=C=>{C.stopPropagation(),g(C,e.node)},re=C=>{C.preventDefault(),C.stopPropagation(),w(C,e.node)},ce=C=>{C.preventDefault(),C.stopPropagation(),F(C,e.node)},se=C=>{C.stopPropagation(),D(C,e.node)},de=C=>{C.stopPropagation(),S(C,e.node)};return()=>{var ve,ye;const C=new Map;a.value.forEach(ee=>{C.set(ee.key,ee)});const{isLeaf:M,label:Y,level:p,rawNode:I,expanded:T,checkDisabled:O,dragDisabled:U,dropDisabled:W,node:J}=e,{checkable:ie,draggable:Q}=n,B=Q&&!U,Fe=(ye=(ve=c.draggableIcon)==null?void 0:ve.call(c))!=null?ye:K(j,{name:h.value},null),Ie=C.get(i),ge=[];t.value&&oe(C,Ie).reverse().forEach((ee,Be)=>{var pe;(pe=C.get(ee))!=null&&pe.isLast&&ge.push(Be)});const $e=n.customAdditional?n.customAdditional({node:I,level:p}):void 0;return K("div",fe({class:_.value,"aria-grabbed":A.value||void 0,"aria-label":Y,"aria-selected":b.value,draggable:B||void 0,title:Y,onDragstart:B?R:void 0,onDragend:B?le:void 0,onDragenter:B?re:void 0,onDragover:B?ce:void 0,onDragleave:B?se:void 0,onDrop:B&&!W?de:void 0},$e),[K(Dn,{level:p,noopIdentUnitArr:ge,prefixCls:o.value},null),B?K("span",{class:`${o.value}-node-draggable-icon`},[Fe]):Q&&K("span",{class:`${o.value}-node-draggable-icon-noop`},null),M&&t.value?K(Sn,null,null):K(mn,{expanded:T,hasTopLine:v.value,isLeaf:M,nodeKey:i,rawNode:I},null),ie&&K(xn,{checkDisabled:O,node:J},null),K(kn,{disabled:L.value,node:J,nodeKey:i,label:Y,selected:b.value},null)])}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */function me(e){const{heightMd:n,heightSm:a,fontSizeIcon:o,marginSizeXs:t,paddingSizeXs:l,paddingSizeSm:r,colorPrimaryHover:c,colorPrimaryText:h,colorContainerBgHover:s,colorContainerBg:f,colorIconInfo:d}=e,u=a;return{dropLineWidth:2,dropLineColor:c,bgColor:f,nodeBgColorHover:s,nodeBgColorSelected:f,nodeColorSelected:h,nodePaddingVertical:"0px",nodeContentHeight:n,nodeContentPadding:`0 ${r}px 0 ${l}px`,nodeContentLabelPadding:`0 ${l}px`,nodeContentLabelHighlightColor:h,nodeCheckboxMargin:`0 ${t}px 0 ${u/2-o/2}px`,nodeIconWidth:u,expandIconColor:d}}/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const wn=(e,n)=>me(e),Ke={width:0,height:0,display:"flex",overflow:"hidden",opacity:0,border:0,padding:0,margin:0},An=V({name:"IxTree",props:gn,setup(e,{attrs:n,expose:a,slots:o}){const t=be("common"),{globalHashId:l,hashId:r,registerToken:c}=Te("tree");c(wn);const h=m(()=>`${t.prefixCls}-tree`),s=be("tree"),f=m(()=>{var p;return(p=e.autoHeight)!=null?p:s.autoHeight}),d=m(()=>{var p;return(p=e.childrenKey)!=null?p:s.childrenKey}),u=Oe(e,s),x=m(()=>{var p;return(p=e.labelKey)!=null?p:s.labelKey}),g=m(()=>{var p;return(p=e.showLine)!=null?p:s.showLine}),w=m(()=>{var p;return(p=e.blocked)!=null?p:s.blocked}),F=m(()=>e.checkable&&e.checkOnClick),{mergedNodes:D,mergedNodeMap:S}=Qe(e,d,u,x),{searchedKeys:i}=dn(e,S,x),y=sn(e,s,d,u,x,S,i),k=en(D,y,e,i),v=Ye(e,S),b=on(e,s,y),L=hn(e,S);Ge(G,{props:e,slots:o,config:s,flattedNodes:k,mergedPrefixCls:h,mergedNodeMap:S,mergedGetKey:u,mergedShowLine:g,mergedCheckOnClick:F,searchedKeys:i,...v,...y,...b,...L});const A=H(),N=H(),{activeKey:E}=L,{focused:z,handleFocus:P,handleBlur:X,handleKeydown:_,handleKeyup:R}=cn(e,S,k,y,L),le=m(()=>{const p=h.value;return{[l.value]:!!l.value,[r.value]:!!r.value,[p]:!0,[`${p}-active`]:!q(E.value),[`${p}-blocked`]:w.value,[`${p}-virtual`]:e.virtual,[`${p}-auto-height`]:f.value,[`${p}-focused`]:z.value,[`${p}-show-line`]:g.value,[`${p}-empty`]:!k.value.length}}),re=m(()=>{var U,W;const p=E.value;if(q(p))return"";const I=S.value;let T=String(p),O=(U=I.get(p))==null?void 0:U.parentKey;for(;O;)T=`${String(O)} > ${T}`,O=(W=I.get(O))==null?void 0:W.parentKey;return T}),ce=p=>{var I;(I=A==null?void 0:A.value)==null||I.focus(p)},se=()=>{var p;(p=A==null?void 0:A.value)==null||p.blur()},de=p=>{var I;(I=N.value)==null||I.scrollTo(p)},C=p=>{var I;return(I=S.value.get(p))==null?void 0:I.rawNode},M=()=>k.value;a({focus:ce,blur:se,expandAll:y.expandAll,collapseAll:y.collapseAll,scrollTo:de,getNode:C,_getFlattedNodes:M});const Y=(p,I,T)=>{$(e.onScrolledChange,p,I,T.map(O=>O.rawNode))};return()=>{var T;const p=k.value;let I;if(p.length>0){const O=({item:B})=>K(Ce,fe({node:B},B),null),{height:U,virtual:W,virtualItemHeight:J,onScroll:ie,onScrolledBottom:Q}=e;I=W?K(He,{ref:N,class:`${h.value}-content`,dataSource:p,getKey:"key",height:f.value?"100%":U,itemHeight:J,itemRender:O,virtual:!0,onScroll:ie,onScrolledBottom:Q,onScrolledChange:Y},null):K("div",{class:`${h.value}-content`,style:Xe(f.value?void 0:{maxHeight:qe(U)})},[K("div",{class:`${h.value}-content-inner`},[p.map(B=>K(Ce,fe({node:B},B),null))])])}else I=K(ze,{empty:e.empty},o);return K("div",{class:le.value,role:"tree"},[z.value&&K("span",{style:Ke,"aria-live":"assertive"},[re.value]),K("input",{ref:A,style:Ke,tabindex:(T=n.tabIndex)!=null?T:0,onFocus:P,onBlur:X,onKeydown:_,onKeyup:R,value:"","aria-label":"for screen reader"},null),I])}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const In=An;export{In as I};
